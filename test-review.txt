🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 EmbeddingEngineFactory inizializzata
🎯 EmbeddingManager inizializzato
🚀 UMAP disponibile per riduzione dimensionale!
🚀 cuML GPU clustering disponibile!
💥 EmbeddingDestroyer inizializzato - Ready to destroy and rebuild!
🎯 SimpleEmbeddingManager inizializzato
✅ Blueprint esempi inizializzato correttamente
🔄 [LLMConfigService] Configurazione ricaricata
🔧 [LLMConfigService] Servizio inizializzato con config: /home/ubuntu/classificatore/config.yaml
🚀 Avvio server Flask - Debug: True
 * Serving Flask app 'server'
 * Debug mode: on
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Creo oggetto Tenant da a0fd7600-f4f7-11ef-9315-96000228e7fe...
Connessione al database TAG stabilita con successo
🔍 [DEBUG] Creo oggetto Tenant da a0fd7600-f4f7-11ef-9315-96000228e7fe...
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Tenant risolto: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 20 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Tenant risolto: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Creo oggetto Tenant da a0fd7600-f4f7-11ef-9315-96000228e7fe...
🔍 [DEBUG] Creo oggetto Tenant da a0fd7600-f4f7-11ef-9315-96000228e7fe...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Tenant risolto: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Tenant risolto: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/prompts/015007d9-d413-11ef-86a5-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Creo oggetto Tenant da 015007d9-d413-11ef-86a5-96000228e7fe...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 20 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Tenant risolto: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-30T12:34:13', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id 015007d9-d413-11ef-86a5-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 20 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔧 Creazione MongoClassificationReader per cliente: f7b9e66a-8bd5-11ef-9557-96000228e7fe
🔍 Risoluzione tenant da UUID: f7b9e66a-8bd5-11ef-9557-96000228e7fe
🔍 [DEBUG] GET /api/prompts/f7b9e66a-8bd5-11ef-9557-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: f7b9e66a-8bd5-11ef-9557-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: f7b9e66a-8bd5-11ef-9557-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Creo oggetto Tenant da f7b9e66a-8bd5-11ef-9557-96000228e7fe...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Mondino (mondino2) UUID=f7b9e66a-8bd5-11ef-9557-96000228e7fe
✅ Tenant risolto da UUID: Mondino (f7b9e66a-8bd5-11ef-9557-96000228e7fe)
📊 Collection generata: mondino2_f7b9e66a-8bd5-11ef-9557-96000228e7fe per tenant Mondino
✅ MongoClassificationReader inizializzato per tenant: Mondino
   📊 Collection: mondino2_f7b9e66a-8bd5-11ef-9557-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Mondino (mondino2)
📊 Collection generata: mondino2_f7b9e66a-8bd5-11ef-9557-96000228e7fe per tenant Mondino
   📊 Collection: mondino2_f7b9e66a-8bd5-11ef-9557-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: mondino2_f7b9e66a-8bd5-11ef-9557-96000228e7fe per tenant Mondino
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Mondino
📊 Calcolo statistiche per tenant: Mondino
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Mondino (mondino2) UUID=f7b9e66a-8bd5-11ef-9557-96000228e7fe
✅ [DEBUG] Tenant risolto: Mondino (f7b9e66a-8bd5-11ef-9557-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
🔍 [DEBUG] Recuperati 0 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 0/0 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'f7b9e66a-8bd5-11ef-9557-96000228e7fe', 'tenant_name': 'unknown', 'total_prompts': 0, 'active_prompts': 0, 'inactive_prompts': 0, 'last_updated': None, 'status': 'no_active_prompts', 'canOperate': False, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': False}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': False}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 3}
✅ [DEBUG] Status prompt per tenant_id f7b9e66a-8bd5-11ef-9557-96000228e7fe: 0/0 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/015007d9-d413-11ef-86a5-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Creo oggetto Tenant da 015007d9-d413-11ef-86a5-96000228e7fe...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Tenant risolto: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant con oggetto Tenant...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-30T12:34:13', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id 015007d9-d413-11ef-86a5-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🎯 TRAINING SUPERVISIONATO - Cliente: 015007d9-d413-11ef-86a5-96000228e7fe
📋 Parametri utente semplificati:
  � Max sessioni review: 500
  🎯 Soglia confidenza: 0.95
  🔄 Forza review: False
  ⚖️  Soglia disagreement: 0.3
🔧 Inizializzazione pipeline per cliente: 015007d9-d413-11ef-86a5-96000228e7fe (con lock)
⚠️ [PIPELINE] DEPRECATO: uso di tenant_slug '015007d9-d413-11ef-86a5-96000228e7fe' - convertendo a oggetto Tenant
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
🔄 [PIPELINE] Conversione completata: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
✅ [CONFIG] Configurazione base caricata da /home/ubuntu/classificatore/Utils/../config.yaml
🎯 [PIPELINE CLUSTERING CONFIG] Caricati parametri personalizzati per tenant 015007d9-d413-11ef-86a5-96000228e7fe:
   allow_single_cluster: non_definito -> False
   alpha: non_definito -> 0.4
   cluster_selection_epsilon: non_definito -> 0.28
   cluster_selection_method: non_definito -> leaf
   max_cluster_size: non_definito -> 0
   metric: non_definito -> euclidean
   min_cluster_size: 5 -> 13
   min_samples: 3 -> 16
   only_user: non_definito -> False
   umap_metric: non_definito -> cosine
   umap_min_dist: non_definito -> 0
   umap_n_components: non_definito -> 17
   umap_n_neighbors: non_definito -> 30
   umap_random_state: non_definito -> 42
   use_umap: non_definito -> True

🚀 [FASE 1: INIZIALIZZAZIONE] Avvio pipeline...
🏥 [FASE 1: INIZIALIZZAZIONE] Tenant: humanitas
🎯 [FASE 1: INIZIALIZZAZIONE] Configurazione:
   📊 Confidence threshold: 0.7
   🤖 Auto mode: True
   🔄 Auto retrain: False
� [FASE 1: INIZIALIZZAZIONE] Inizializzazione lettore conversazioni...
✅ [CONFIG] Configurazione base caricata da /home/ubuntu/classificatore/Utils/../config.yaml
✅ [CONFIG] Config personalizzata tenant 015007d9-d413-11ef-86a5-96000228e7fe: 15 parametri
🎯 [ONLY_USER] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: False (da config personalizzata)
🎯 [LETTORE] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: only_user = False (da config tenant)
� [FASE 1: INIZIALIZZAZIONE] Inizializzazione aggregator...
   🔍 Schema: 'humanitas'
   🆔 Tenant ID: '015007d9-d413-11ef-86a5-96000228e7fe'
🎯 [SESSION AGGREGATOR] Inizializzazione con oggetto Tenant: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
🎯 [ONLY_USER] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: False (da config personalizzata)
🎯 [LETTORE] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: only_user = False (da config tenant)
� [ONLY_USER] Schema None: False (legacy - no tenant_id)
🧠 [FASE 1: INIZIALIZZAZIONE] Sistema embedder dinamico (lazy loading)
🔧 [FASE 1: INIZIALIZZAZIONE] Parametri clustering:
   📊 Min cluster size: 13
   📊 Min samples: 16
🐛 DEBUG CLUSTER_ALPHA - PRIMA:
   📋 clustering_config.get('alpha', 1.0): 0.4
   📋 Type: <class 'float'>
🐛 DEBUG CLUSTER_ALPHA - DOPO CONVERSIONE:
   📋 cluster_alpha: 0.4
   📋 Type: <class 'float'>
🐛 DEBUG CLUSTER_ALPHA - FINALE:
   📋 cluster_alpha finale: 0.4
   📋 Type finale: <class 'float'>
   📋 Alpha > 0: True
✅ [CONFIG] Config personalizzata tenant 015007d9-d413-11ef-86a5-96000228e7fe: 15 parametri
🗂️  [UMAP] Parametri per tenant 015007d9-d413-11ef-86a5-96000228e7fe:
   use_umap: True
   n_neighbors: 30
   min_dist: 0
   n_components: 17
   metric: cosine
🔧 [FIX DEBUG] Parametri tenant passati a HDBSCANClusterer:
   min_cluster_size: 13
   min_samples: 16
   alpha: 0.4
   cluster_selection_method: leaf
   cluster_selection_epsilon: 0.28
   metric: euclidean
   allow_single_cluster: False
   max_cluster_size: 0
   🗂️  use_umap: True
   🗂️  umap_n_neighbors: 30
   🗂️  umap_min_dist: 0
   🗂️  umap_n_components: 17
🎯 [BERTOPIC] Parametri consistenti configurati:
   📊 HDBSCAN: 10 parametri
   📊 UMAP: 5 parametri
🔧 HDBSCANClusterer inizializzato:
   min_cluster_size: 13
   min_samples: 16
   metric: euclidean
   cluster_selection_epsilon: 0.28
   🗂️  UMAP enabled: True
     📏 n_neighbors: 30
     📐 min_dist: 0
     📊 n_components: 17
     🎯 metric: cosine
   🚀 GPU enabled: True
   💾 GPU memory limit: 80%
   🔄 CPU fallback: True
   ⚠️  [GPU MODE] Limitazioni cuML HDBSCAN:
     🚫 leaf_size=40 sarà IGNORATO su GPU
     ✅ Parametri supportati: cluster_selection_method, alpha, allow_single_cluster
🎯 [DEBUG REACT] Parametri configurati:
   cluster_selection_method: leaf
   alpha: 0.4
   allow_single_cluster: False
🧠 Inizializzazione memoria semantica...
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
⚠️  Fallback a config LEGACY per embedding
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔧 TokenizationManager inizializzato:
   📊 Modello tokenizer: cl100k_base
   🔢 Limite massimo token: 8000
   ✂️  Strategia troncamento: start
✅ TokenizationManager integrato in LaBSE per gestione conversazioni lunghe
🚀 Inizializzazione LaBSE embedder su device: cuda
📥 Caricamento modello sentence-transformers/LaBSE...
🚀 Caricamento diretto su GPU...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
✅ Modello caricato con successo!
📊 Dimensione embedding: 768
🔧 Device: cuda
🎮 GPU: NVIDIA A10G
💾 GPU Memory: 23.7 GB
📈 GPU Memory utilizzata: 1.89 GB
� Primo parametro su device: cuda:0
🧪 Test del modello LaBSE...
🔍 Encoding 3 testi con LaBSE su device cuda...

🔍 TOKENIZZAZIONE PREVENTIVA LABSE CLUSTERING
============================================================
🔍 ELABORAZIONE CONVERSAZIONI PER CLUSTERING
   📊 Numero conversazioni: 3
   🆔 Session IDs forniti: No

📊 STATISTICHE ELABORAZIONE:
   🔢 Conversazioni totali: 3
   ✂️  Conversazioni troncate: 0
   📏 Token originali totali: 20
   📐 Token finali totali: 20
   📊 Range token: 6 - 7
✅ Tokenizzazione LaBSE completata:
   📊 Conversazioni processate: 3
   📊 Conversazioni troncate: 0
   📊 Token limite configurato: 8000
   ✅ Tutte le conversazioni entro i limiti, nessun troncamento
============================================================
✅ Embedding generati: shape (3, 768)
✅ Test modello completato con successo!
   Shape: (3, 768)
   Norme: [0.99999994 1.         1.        ]
   Device: cuda
🎯 Modello pronto per l'uso!
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🧠 SemanticMemoryManager inizializzato
  🎯 Soglia riutilizzo etichette: 0.8
  🔍 Soglia similarità semantica: 0.8
  💾 Cache path: semantic_cache/humanitas_015007d9_memory
🔗 Inizializzazione ensemble classifier avanzato...
🔍 ML Ensemble Debugger inizializzato e ATTIVO
   📝 Debug file: ./debug_logs/ml_debug.log
🔍 ML Ensemble Debugger attivato
🔧 Tentativo di inizializzazione IntelligentClassifier tramite LLMFactory...
🧠 GPU Memory prima di LLM: 1.8GB/22.1GB (free: 20.3GB)
✅ Memoria GPU sufficiente, inizializzazione LLM tramite Factory...
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 LLM Factory inizializzato con cache invalidation intelligente
🔍 LLM FACTORY DEBUG: Chiamata ai_config_service.get_tenant_configuration(humanitas) normale...
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id humanitas
🔍 [DEBUG] Query eseguita per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral-nemo:latest', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 9, 1, 13, 20, 23)}
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral-nemo:latest', 'is_active': 1, 'updated_at': datetime.datetime(2025, 9, 1, 13, 20, 23), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral-nemo:latest
🎯 LLM FACTORY DEBUG: Modello normale = 'mistral-nemo:latest'
🔧 Creazione LLM classifier mistral-nemo:latest per tenant humanitas
🚀 LLM FACTORY DEBUG: Avvio creazione nuovo classifier modello 'mistral-nemo:latest'
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto da slug (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
📋 Caricamento parametri LLM globali per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
🎯 Config LLM caricata per 015007d9-d413-11ef-86a5-96000228e7fe (fonte: global)
   📝 Max output tokens: 150
   📊 Max input tokens: 8000
   🌡️  Temperature: 0.1
   🔢 Top K: 40, Top P: 0.9
🎯 Uso modello esplicito: mistral-nemo:latest
🔍 LLM Debugger inizializzato e ATTIVO
   📝 Debug file: ./debug_logs/llm_debug.log
   🎨 Visual formatting: True
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🗄️ MongoClassificationReader inizializzato per tenant: Humanitas
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
Connessione al database TAG stabilita con successo
📋 Recuperati 29 tag dal database TAGS per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
⚠️  Fallback a config LEGACY per embedding
🔧 TokenizationManager inizializzato:
   📊 Modello tokenizer: cl100k_base
   🔢 Limite massimo token: 8000
   ✂️  Strategia troncamento: start
✅ LLM FACTORY DEBUG: Nuovo classifier creato: mistral-nemo:latest
✅ LLM Classifier mistral-nemo:latest (mistral-nemo:latest) creato e cached per tenant humanitas
🏭 LLM classifier ottenuto tramite Factory per tenant humanitas
🤖 LLM classifier creato automaticamente nell'ensemble: mistral-nemo:latest
💡 Possibile fine-tuning per humanitas
🔗 Advanced Ensemble Classifier inizializzato
   🧠 LLM weight: 0.60
   🤖 ML weight: 0.40
   🎯 Confidence threshold: 0.7
   🔄 Adaptive weights: True
   👤 Disaccordi gestiti da QualityGateEngine
📥 Caricamento ultimo modello per humanitas: humanitas_015007d9_20250901_141147
📥 Caricamento ensemble model...
✅ ML ensemble caricato
✅ Configurazione caricata
🔗 Ensemble model caricato da models/humanitas_015007d9_20250901_141147
✅ Modello caricato con successo

🔍 VERIFICA BERTOPIC LOADING:
   📋 BERTopic enabled: True
   📋 BERTopic available: True
   📁 Provider directory: models/humanitas_015007d9_20250901_141147_bertopic
   📁 Directory exists: True
   � File trovati: 3 -> ['metadata.json', 'bertopic_model', 'svd_model.pkl']

🔄 CARICAMENTO BERTOPIC:
   📁 Path completo: /home/ubuntu/classificatore/models/humanitas_015007d9_20250901_141147_bertopic
🔄 Caricamento BERTopic model da models/humanitas_015007d9_20250901_141147_bertopic/bertopic_model
✅ BERTopic model caricato con successo
📥 SVD caricato (svd_model.pkl)
   ⏱️ Caricamento completato in 0.21 secondi
   ✅ BERTopic provider caricato con successo
🔗 BERTopic provider impostato (top_k=10, one_hot=False)
   ✅ BERTopic provider configurato nell'ensemble
⏸️ Riaddestramento automatico disabilitato (modalità supervisione/API)
   💡 Per abilitare, usare auto_retrain=True nell'inizializzazione
✅ Classificatore LLM disponibile nell'ensemble
👤 Inizializzazione trainer interattivo...
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🎯 SIMPLE MANAGER: Usando oggetto Tenant Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📥 Primo embedder - creazione per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🚀 CREATING FRESH EMBEDDER per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id 015007d9-d413-11ef-86a5-96000228e7fe
🔧 FORCE NO CACHE: Bypass cache per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔥 FORCE NO CACHE: Bypasso cache e leggo DIRETTAMENTE dal database per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Query eseguita per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral-nemo:latest', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 9, 1, 13, 20, 23)}
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral-nemo:latest', 'is_active': 1, 'updated_at': datetime.datetime(2025, 9, 1, 13, 20, 23), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral-nemo:latest
🔍 SIMPLE MANAGER: Engine da DB per 015007d9-d413-11ef-86a5-96000228e7fe = 'labse'
🎯 Engine configurato: labse
🔧 DIRECT CREATE: labse
🐳 Tentativo connessione a servizio LaBSE dockerizzato...
🔗 LaBSE Remote Client inizializzato
   📡 Service URL: http://localhost:8081
   ⏱️  Timeout: 300s
   🔄 Max retries: 3
   🛡️ Fallback locale: True
🔧 Inizializzazione client remoto LaBSE...
✅ Servizio embedding online e funzionante
✅ Client remoto LaBSE inizializzato con successo
✅ LaBSE Remote Client configurato con successo
✅ FRESH EMBEDDER creato: LaBSERemoteClient per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🧠 Inizializzazione dedupplicatore intelligente...
💾 [FASE 1: INIZIALIZZAZIONE] Caricamento memoria semantica...
📦 Memoria semantica caricata da cache (77 sessioni)
   📊 Campioni: 75
   🏷️ Tag: 10
✅ [FASE 1: INIZIALIZZAZIONE] Completata in 4.98s
🎯 [FASE 1: INIZIALIZZAZIONE] Pipeline pronta per l'uso!
✅ Pipeline 015007d9-d413-11ef-86a5-96000228e7fe inizializzata
🚀 TRAINING SUPERVISIONATO CON DATASET COMPLETO
  📊 Estrazione: TUTTE le discussioni dal database
  🧩 Clustering: Su tutto il dataset disponibile
  👤 Review umana: Max 500 sessioni rappresentative
🎯 Confidence threshold aggiornato a: 0.95
🎓 TRAINING SUPERVISIONATO AVANZATO
� NUOVA LOGICA:
  🔄 Estrazione: TUTTE le discussioni dal database
  🧩 Clustering: Su tutto il dataset completo
  👤 Review umana: Massimo 500 sessioni rappresentative
--------------------------------------------------
📊 FASE 1: ESTRAZIONE COMPLETA DATASET

� [FASE 2: ESTRAZIONE] Avvio estrazione sessioni...
🏥 [FASE 2: ESTRAZIONE] Tenant: humanitas
📅 [FASE 2: ESTRAZIONE] Giorni indietro: 7
🔄 [FASE 2: ESTRAZIONE] Modalità COMPLETA attivata
🎯 [FASE 2: ESTRAZIONE] Ignorando limite - estrazione totale dataset
� [FASE 2: ESTRAZIONE] Modalità: COMPLETA
� [FASE 2: ESTRAZIONE] Connessione database...
📊 [DEBUG ONLY_USER] Estrazione sessioni aggregate dal schema 'humanitas'...
🎯 [DEBUG ONLY_USER] Parametro only_user = False (tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe)
📄 [DEBUG ONLY_USER] Estrazione completa (senza limite)
📄 [DEBUG ONLY_USER] Filtraggio standard: messaggi USER e AGENT
🔍 [DEBUG SQL] =============================================
🔍 [DEBUG SQL] Schema utilizzato: 'humanitas'
🔍 [DEBUG SQL] Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG SQL] Only User: False
� [DEBUG SQL] Filtro applicato: WHERE csm.said_by IN ('USER', 'AGENT')
🔍 [DEBUG SQL] =============================================
🔍 [DEBUG SQL] QUERY COMPLETA:
🔍 [DEBUG SQL] 
        SELECT cs.session_id
             , (SELECT a.agent_name
                  FROM `humanitas`.agents a
                 WHERE a.agent_id = cs.conversation_agent_id) AS conversation_agent_name
             , csm.conversation_status_message_id
             , csm.conversation_message
             , csm.said_by
             , csm.created_at AS message_created_at
          FROM `humanitas`.conversation_status cs
         INNER JOIN `humanitas`.conversation_status_messages csm
            ON cs.conversation_status_id = csm.conversation_status_id
         WHERE csm.said_by IN ('USER', 'AGENT')
         ORDER BY cs.session_id
             , cs.created_at ASC
             , csm.created_at ASC
             , csm.said_by ASC
        
🔍 [DEBUG SQL] =============================================
Connessione al database MySQL stabilita con successo
✅ [DEBUG ONLY_USER] Query eseguita con successo!
📊 [DEBUG ONLY_USER] Totale righe: 22242
👤 [DEBUG ONLY_USER] Messaggi USER: 11102
🤖 [DEBUG ONLY_USER] Messaggi AGENT: 11140
✅ [DEBUG ONLY_USER] Filtro funziona correttamente!
✅ Trovate 22242 righe da aggregare
🔄 [DEBUG ONLY_USER] Inizio generazione testo completo per 4451 sessioni
🔍 [DEBUG ONLY_USER] Sessione 0008ef4f-c2f4-4f5e-933e-646574f3638c: 3 USER, 3 AGENT
📝 [DEBUG ONLY_USER] Sessione 0008ef4f-c2f4-4f5e-933e-646574f3638c testo finale:
   [UTENTE] tags: 2
   [ASSISTENTE] tags: 2
   Lunghezza testo: 554 caratteri
🔍 [DEBUG ONLY_USER] Sessione 000b61d7-4431-40d2-b83c-9abbb70c98be: 4 USER, 4 AGENT
📝 [DEBUG ONLY_USER] Sessione 000b61d7-4431-40d2-b83c-9abbb70c98be testo finale:
   [UTENTE] tags: 3
   [ASSISTENTE] tags: 3
   Lunghezza testo: 1133 caratteri
🔍 [DEBUG ONLY_USER] Sessione 00160700-ac7f-463d-8fa0-fe57f74a73e6: 4 USER, 4 AGENT
✅ Aggregate 4451 sessioni uniche
🔄 Saltati 8902 messaggi di benvenuto (primi 2 per sessione)
🔄 Sessioni vuote (solo benvenuto): 943
📥 [FASE 2: ESTRAZIONE] Sessioni grezze: 4451
🔍 [FASE 2: ESTRAZIONE] Filtraggio sessioni...
🔍 Filtraggio sessioni vuote/irrilevanti...
✅ Filtro completato:
  📊 Sessioni originali: 4451
  ❌ Sessioni scartate: 943
  ✅ Sessioni valide: 3508
✅ [FASE 2: ESTRAZIONE] Completata in 0.92s
📊 [FASE 2: ESTRAZIONE] Dataset completo: 3508 sessioni
🗑️ [FASE 2: ESTRAZIONE] Filtrate: 943 sessioni vuote/irrilevanti
