🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 EmbeddingEngineFactory inizializzata
🎯 EmbeddingManager inizializzato
🚀 UMAP disponibile per riduzione dimensionale!
🚀 cuML GPU clustering disponibile!
💥 EmbeddingDestroyer inizializzato - Ready to destroy and rebuild!
🎯 SimpleEmbeddingManager inizializzato
✅ Blueprint esempi inizializzato correttamente
🔄 [LLMConfigService] Configurazione ricaricata
🔧 [LLMConfigService] Servizio inizializzato con config: /home/ubuntu/classificatore/config.yaml
🚀 Avvio server Flask - Debug: True
 * Serving Flask app 'server'
 * Debug mode: on
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 20 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🎯 [CLUSTERING CONFIG] Caricando parametri personalizzati per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
   allow_single_cluster: non_definito -> False
   alpha: non_definito -> 0.1
   cluster_selection_epsilon: non_definito -> 0.01
   cluster_selection_method: non_definito -> eom
   max_cluster_size: non_definito -> 0
   metric: non_definito -> cosine
   min_cluster_size: 5 -> 2
   min_samples: 3 -> 1
   only_user: non_definito -> True
   umap_metric: non_definito -> cosine
   umap_min_dist: non_definito -> 0.1
   umap_n_components: non_definito -> 50
   umap_n_neighbors: non_definito -> 15
   umap_random_state: non_definito -> 42
   use_umap: non_definito -> True
📈 [API] Recuperato storico clustering: 2 versioni per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
🎯 [CLUSTERING CONFIG] Caricando parametri personalizzati per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
   allow_single_cluster: non_definito -> False
   alpha: non_definito -> 0.1
   cluster_selection_epsilon: non_definito -> 0.01
   cluster_selection_method: non_definito -> eom
   max_cluster_size: non_definito -> 0
   metric: non_definito -> cosine
   min_cluster_size: 5 -> 2
   min_samples: 3 -> 1
   only_user: non_definito -> True
   umap_metric: non_definito -> cosine
   umap_min_dist: non_definito -> 0.1
   umap_n_components: non_definito -> 50
   umap_n_neighbors: non_definito -> 15
   umap_random_state: non_definito -> 42
   use_umap: non_definito -> True
📈 [API] Recuperato storico clustering: 2 versioni per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
📊 [API] Recuperata versione 2 per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 API: Recupero prompt per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🔧 API: Recupero tools per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
✅ Recuperati 5 prompt per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Query eseguita per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'embedding_engine': 'openai_large', 'llm_engine': 'mistral:7b', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 26, 22, 57, 26)}
✅ Recuperati 0 tools per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'embedding_engine': 'openai_large', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 26, 22, 57, 26), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
🔍 API: Recupero prompt per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔧 API: Recupero tools per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'embedding_engine': 'openai_large', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 26, 22, 57, 26), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
✅ Recuperati 5 prompt per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Recuperati 0 tools per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
🔧 API: Recupero tools per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Recuperati 0 tools per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
🔧 API: Recupero tools per tenant_id: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Recuperati 0 tools per tenant a0fd7600-f4f7-11ef-9315-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 EmbeddingEngineFactory inizializzata
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
📋 [LLMConfigService] Modelli disponibili: 4
📋 [API] Modelli disponibili per tenant humanitas: 4
📋 [LLMConfigService] Modelli disponibili: 4
📋 [API] Modelli disponibili per tenant humanitas: 4
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto da slug (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
📋 Caricamento parametri LLM globali per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
🎯 Config LLM caricata per 015007d9-d413-11ef-86a5-96000228e7fe (fonte: global)
   📝 Max output tokens: 150
   📊 Max input tokens: 8000
   🌡️  Temperature: 0.1
   🔢 Top K: 40, Top P: 0.9
🎯 Uso modello specifico per humanitas: mistral:7b
🔍 LLM Debugger inizializzato e ATTIVO
   📝 Debug file: ./debug_logs/llm_debug.log
   🎨 Visual formatting: True
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🗄️ MongoClassificationReader inizializzato per tenant: Humanitas
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
Connessione al database TAG stabilita con successo
📋 Recuperati 0 tag dal database TAGS per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
📊 Caricamento config SEPARATA per embedding
🔧 TokenizationManager inizializzato:
   📊 Modello tokenizer: cl100k_base
   🔢 Limite massimo token: 8000
   ✂️  Strategia troncamento: start
📋 Caricamento parametri LLM specifici per tenant: humanitas
📋 [API] Parametri LLM per tenant humanitas (fonte: tenant_specific)
📋 [LLMConfigService] Modelli disponibili: 4
📋 [API] Info modello mistral-nemo:latest recuperate
💾 [LLMConfigService] Backup creato: /home/ubuntu/classificatore/backup/config_20250831_215056.yaml
💾 [LLMConfigService] Parametri aggiornati per tenant humanitas
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto da slug (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
📋 Caricamento parametri LLM globali per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
🎯 Config LLM caricata per 015007d9-d413-11ef-86a5-96000228e7fe (fonte: global)
   📝 Max output tokens: 150
   📊 Max input tokens: 8000
   🌡️  Temperature: 0.1
   🔢 Top K: 40, Top P: 0.9
🎯 Uso modello specifico per humanitas: mistral:7b
🔍 LLM Debugger inizializzato e ATTIVO
   📝 Debug file: ./debug_logs/llm_debug.log
   🎨 Visual formatting: True
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🗄️ MongoClassificationReader inizializzato per tenant: Humanitas
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
Connessione al database TAG stabilita con successo
📋 Recuperati 0 tag dal database TAGS per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
📊 Caricamento config SEPARATA per embedding
🔧 TokenizationManager inizializzato:
   📊 Modello tokenizer: cl100k_base
   🔢 Limite massimo token: 8000
   ✂️  Strategia troncamento: start
📋 Caricamento parametri LLM specifici per tenant: humanitas
📋 [API] Parametri LLM per tenant humanitas (fonte: tenant_specific)
📋 [LLMConfigService] Modelli disponibili: 4
📋 [API] Modelli disponibili per tenant humanitas: 4
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 Review Queue recuperate 20 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔧 Creazione MongoClassificationReader per cliente: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
✅ MongoClassificationReader inizializzato per tenant: Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Alleanza (alleanza)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Alleanza
📊 Calcolo statistiche per tenant: Alleanza
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
✅ MongoClassificationReader inizializzato per tenant: Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Alleanza (alleanza)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Alleanza
📊 Calcolo statistiche per tenant: Alleanza
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
