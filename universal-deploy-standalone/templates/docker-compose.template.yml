version: '3.8'

services:
  app:
    build: .
    container_name: "{{PROJECT_NAME}}"
    restart: unless-stopped
    ports:
      - "{{MAIN_PORT}}:{{MAIN_PORT}}"
    environment:
      - NODE_ENV={{ENVIRONMENT}}
      - PORT={{MAIN_PORT}}
      - DATABASE_URL={{DATABASE_URL}}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - app-network
    depends_on:
      - database
      - redis

  database:
    image: "{{DATABASE_IMAGE}}"
    container_name: "{{PROJECT_NAME}}-database"
    restart: unless-stopped
    environment:
      - POSTGRES_DB={{DATABASE_NAME}}
      - POSTGRES_USER={{DATABASE_USER}}
      - POSTGRES_PASSWORD={{DATABASE_PASSWORD}}
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - "{{DATABASE_PORT}}:5432"
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: "{{PROJECT_NAME}}-redis"
    restart: unless-stopped
    ports:
      - "{{REDIS_PORT}}:6379"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: "{{PROJECT_NAME}}-nginx"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - app-network

volumes:
  database_data:
    driver: local

networks:
  app-network:
    driver: bridge
