🚀 UMAP disponibile per riduzione dimensionale!
🚀 cuML GPU clustering disponibile!
💥 EmbeddingDestroyer inizializzato - Ready to destroy and rebuild!
🎯 SimpleEmbeddingManager inizializzato
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 EmbeddingEngineFactory inizializzata
🎯 EmbeddingManager inizializzato
✅ Blueprint esempi inizializzato correttamente
🚀 Avvio server Flask - Debug: True
 * Serving Flask app 'server'
 * Debug mode: on
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/prompts/015007d9-d413-11ef-86a5-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(015007d9-d413-11ef-86a5-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-30T12:34:13', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id 015007d9-d413-11ef-86a5-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 API: Recupero prompt per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🔧 API: Recupero tools per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
✅ Recuperati 5 prompt per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Query eseguita per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54)}
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
✅ Recuperati 1 tools per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔍 API: Recupero prompt per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔧 API: Recupero tools per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
✅ Recuperati 5 prompt per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
✅ Recuperati 1 tools per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
🔧 API: Recupero tools per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
✅ Recuperati 1 tools per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔧 API: Recupero tools per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
✅ Recuperati 1 tools per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 EmbeddingEngineFactory inizializzata
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
🔍 Trovati 22 tenant da TAG.tenants:
  - Alleanza (alleanza) -> a0fd7600-f4f7-11ef-9315-96000228e7fe
  - BluPantheon (blupantheon) -> 6bc4f06f-742e-11f0-acb8-96000228e7fe
  - Boots (boots) -> 0f9d6e90-d319-11ef-86a5-96000228e7fe
  - CEF (cef) -> b1048bdb-b6ff-11ef-86a5-96000228e7fe
  - Cogeda (cogeda) -> cca12133-6955-11f0-9817-96000228e7fe
  - Community (community) -> d365ed2b-b8a6-11ef-86a5-96000228e7fe
  - Consiglio Regione Toscana (crt) -> 78ced6ea-030b-11f0-9a34-96000228e7fe
  - Demo BluPantheon (ai) -> 0c1231de-a58c-11ef-8c7f-96000228e7fe
  - Development BluPantheon (dev) -> 361f77f0-bef1-11ef-86a5-96000228e7fe
  - Don Carlo San Martino (doncarlosanmartino) -> c354c01b-6e25-11f0-acb8-96000228e7fe
  - Fate Bene Fratelli (fatebenefratelli) -> 2d88ac57-73a5-11f0-acb8-96000228e7fe
  - Federfarma Roma (federfarmaroma) -> 3dadd270-3626-11f0-b087-96000228e7fe
  - Forma Camera (formacamera) -> 9b87a910-e477-11ef-9315-96000228e7fe
  - golvalerio (golvalerio) -> f071db89-83e3-11f0-bfd6-96000228e7fe
  - Gruppo Ospedaliero Leonardo (leonardo) -> bc4a964a-efde-11ef-9315-96000228e7fe
  - Homnya (homnya) -> 409a7aa7-fe55-11ef-9a34-96000228e7fe
  - Humanitas (humanitas) -> 015007d9-d413-11ef-86a5-96000228e7fe
  - Mondino (mondino2) -> f7b9e66a-8bd5-11ef-9557-96000228e7fe
  - MSC (msc) -> ccabd07d-1068-11f0-9133-96000228e7fe
  - Ospedale Isola Tiberina - Gemelli Isola (fbf) -> 964e85e1-a7e0-11ef-86a5-96000228e7fe
  - Tenant Evaluation (tenantevaluation) -> 396dba74-4aab-11f0-b6b8-96000228e7fe
  - Wopta (wopta) -> 16c222a9-f293-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Connessione al database TAG chiusa
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
🔍 Trovati 22 tenant da TAG.tenants:
  - Alleanza (alleanza) -> a0fd7600-f4f7-11ef-9315-96000228e7fe
  - BluPantheon (blupantheon) -> 6bc4f06f-742e-11f0-acb8-96000228e7fe
  - Boots (boots) -> 0f9d6e90-d319-11ef-86a5-96000228e7fe
  - CEF (cef) -> b1048bdb-b6ff-11ef-86a5-96000228e7fe
  - Cogeda (cogeda) -> cca12133-6955-11f0-9817-96000228e7fe
  - Community (community) -> d365ed2b-b8a6-11ef-86a5-96000228e7fe
  - Consiglio Regione Toscana (crt) -> 78ced6ea-030b-11f0-9a34-96000228e7fe
  - Demo BluPantheon (ai) -> 0c1231de-a58c-11ef-8c7f-96000228e7fe
  - Development BluPantheon (dev) -> 361f77f0-bef1-11ef-86a5-96000228e7fe
  - Don Carlo San Martino (doncarlosanmartino) -> c354c01b-6e25-11f0-acb8-96000228e7fe
  - Fate Bene Fratelli (fatebenefratelli) -> 2d88ac57-73a5-11f0-acb8-96000228e7fe
  - Federfarma Roma (federfarmaroma) -> 3dadd270-3626-11f0-b087-96000228e7fe
  - Forma Camera (formacamera) -> 9b87a910-e477-11ef-9315-96000228e7fe
  - golvalerio (golvalerio) -> f071db89-83e3-11f0-bfd6-96000228e7fe
  - Gruppo Ospedaliero Leonardo (leonardo) -> bc4a964a-efde-11ef-9315-96000228e7fe
  - Homnya (homnya) -> 409a7aa7-fe55-11ef-9a34-96000228e7fe
  - Humanitas (humanitas) -> 015007d9-d413-11ef-86a5-96000228e7fe
  - Mondino (mondino2) -> f7b9e66a-8bd5-11ef-9557-96000228e7fe
  - MSC (msc) -> ccabd07d-1068-11f0-9133-96000228e7fe
  - Ospedale Isola Tiberina - Gemelli Isola (fbf) -> 964e85e1-a7e0-11ef-86a5-96000228e7fe
  - Tenant Evaluation (tenantevaluation) -> 396dba74-4aab-11f0-b6b8-96000228e7fe
  - Wopta (wopta) -> 16c222a9-f293-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
Connessione al database TAG stabilita con successo
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Connessione al database TAG chiusa
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
🔍 Trovati 22 tenant da TAG.tenants:
  - Alleanza (alleanza) -> a0fd7600-f4f7-11ef-9315-96000228e7fe
  - BluPantheon (blupantheon) -> 6bc4f06f-742e-11f0-acb8-96000228e7fe
  - Boots (boots) -> 0f9d6e90-d319-11ef-86a5-96000228e7fe
  - CEF (cef) -> b1048bdb-b6ff-11ef-86a5-96000228e7fe
  - Cogeda (cogeda) -> cca12133-6955-11f0-9817-96000228e7fe
  - Community (community) -> d365ed2b-b8a6-11ef-86a5-96000228e7fe
  - Consiglio Regione Toscana (crt) -> 78ced6ea-030b-11f0-9a34-96000228e7fe
  - Demo BluPantheon (ai) -> 0c1231de-a58c-11ef-8c7f-96000228e7fe
  - Development BluPantheon (dev) -> 361f77f0-bef1-11ef-86a5-96000228e7fe
  - Don Carlo San Martino (doncarlosanmartino) -> c354c01b-6e25-11f0-acb8-96000228e7fe
  - Fate Bene Fratelli (fatebenefratelli) -> 2d88ac57-73a5-11f0-acb8-96000228e7fe
  - Federfarma Roma (federfarmaroma) -> 3dadd270-3626-11f0-b087-96000228e7fe
  - Forma Camera (formacamera) -> 9b87a910-e477-11ef-9315-96000228e7fe
  - golvalerio (golvalerio) -> f071db89-83e3-11f0-bfd6-96000228e7fe
  - Gruppo Ospedaliero Leonardo (leonardo) -> bc4a964a-efde-11ef-9315-96000228e7fe
  - Homnya (homnya) -> 409a7aa7-fe55-11ef-9a34-96000228e7fe
  - Humanitas (humanitas) -> 015007d9-d413-11ef-86a5-96000228e7fe
  - Mondino (mondino2) -> f7b9e66a-8bd5-11ef-9557-96000228e7fe
  - MSC (msc) -> ccabd07d-1068-11f0-9133-96000228e7fe
  - Ospedale Isola Tiberina - Gemelli Isola (fbf) -> 964e85e1-a7e0-11ef-86a5-96000228e7fe
  - Tenant Evaluation (tenantevaluation) -> 396dba74-4aab-11f0-b6b8-96000228e7fe
  - Wopta (wopta) -> 16c222a9-f293-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Connessione al database TAG chiusa
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
🔍 Trovati 22 tenant da TAG.tenants:
  - Alleanza (alleanza) -> a0fd7600-f4f7-11ef-9315-96000228e7fe
  - BluPantheon (blupantheon) -> 6bc4f06f-742e-11f0-acb8-96000228e7fe
  - Boots (boots) -> 0f9d6e90-d319-11ef-86a5-96000228e7fe
  - CEF (cef) -> b1048bdb-b6ff-11ef-86a5-96000228e7fe
  - Cogeda (cogeda) -> cca12133-6955-11f0-9817-96000228e7fe
  - Community (community) -> d365ed2b-b8a6-11ef-86a5-96000228e7fe
  - Consiglio Regione Toscana (crt) -> 78ced6ea-030b-11f0-9a34-96000228e7fe
  - Demo BluPantheon (ai) -> 0c1231de-a58c-11ef-8c7f-96000228e7fe
  - Development BluPantheon (dev) -> 361f77f0-bef1-11ef-86a5-96000228e7fe
  - Don Carlo San Martino (doncarlosanmartino) -> c354c01b-6e25-11f0-acb8-96000228e7fe
  - Fate Bene Fratelli (fatebenefratelli) -> 2d88ac57-73a5-11f0-acb8-96000228e7fe
  - Federfarma Roma (federfarmaroma) -> 3dadd270-3626-11f0-b087-96000228e7fe
  - Forma Camera (formacamera) -> 9b87a910-e477-11ef-9315-96000228e7fe
  - golvalerio (golvalerio) -> f071db89-83e3-11f0-bfd6-96000228e7fe
  - Gruppo Ospedaliero Leonardo (leonardo) -> bc4a964a-efde-11ef-9315-96000228e7fe
  - Homnya (homnya) -> 409a7aa7-fe55-11ef-9a34-96000228e7fe
  - Humanitas (humanitas) -> 015007d9-d413-11ef-86a5-96000228e7fe
  - Mondino (mondino2) -> f7b9e66a-8bd5-11ef-9557-96000228e7fe
  - MSC (msc) -> ccabd07d-1068-11f0-9133-96000228e7fe
  - Ospedale Isola Tiberina - Gemelli Isola (fbf) -> 964e85e1-a7e0-11ef-86a5-96000228e7fe
  - Tenant Evaluation (tenantevaluation) -> 396dba74-4aab-11f0-b6b8-96000228e7fe
  - Wopta (wopta) -> 16c222a9-f293-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
Connessione al database TAG stabilita con successo
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Connessione al database TAG chiusa
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
✅ MongoClassificationReader inizializzato per tenant: Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Alleanza (alleanza)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Alleanza
📊 Calcolo statistiche per tenant: Alleanza
🔍 [DEBUG] GET /api/prompts/015007d9-d413-11ef-86a5-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(015007d9-d413-11ef-86a5-96000228e7fe)...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-30T12:34:13', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id 015007d9-d413-11ef-86a5-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] GET /api/tenants - Avvio richiesta tenant con oggetti Tenant
🔍 [DEBUG] Chiamo get_available_tenants() per oggetti Tenant...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🏢 Recuperati 22 oggetti Tenant dalla tabella TAG.tenants
🔍 [DEBUG] Recuperati 22 oggetti Tenant dal database
🔍 [DEBUG] Primi 3 tenant convertiti: [{'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'tenant_slug': 'alleanza', 'is_active': True}, {'tenant_id': '6bc4f06f-742e-11f0-acb8-96000228e7fe', 'tenant_name': 'BluPantheon', 'tenant_slug': 'blupantheon', 'is_active': True}, {'tenant_id': '0f9d6e90-d319-11ef-86a5-96000228e7fe', 'tenant_name': 'Boots', 'tenant_slug': 'boots', 'is_active': True}]
🔍 [DEBUG] Invio risposta con 22 tenant
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/a0fd7600-f4f7-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(a0fd7600-f4f7-11ef-9315-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'a0fd7600-f4f7-11ef-9315-96000228e7fe', 'tenant_name': 'Alleanza', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-25T08:54:43', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id a0fd7600-f4f7-11ef-9315-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔍 [DEBUG] GET /api/prompts/bc4a964a-efde-11ef-9315-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: bc4a964a-efde-11ef-9315-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: bc4a964a-efde-11ef-9315-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(bc4a964a-efde-11ef-9315-96000228e7fe)...
🔧 Creazione MongoClassificationReader per cliente: bc4a964a-efde-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: bc4a964a-efde-11ef-9315-96000228e7fe
🔍 [DEBUG] Recuperati 0 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 0/0 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': 'bc4a964a-efde-11ef-9315-96000228e7fe', 'tenant_name': 'unknown', 'total_prompts': 0, 'active_prompts': 0, 'inactive_prompts': 0, 'last_updated': None, 'status': 'no_active_prompts', 'canOperate': False, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': False}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': False}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 3}
✅ [DEBUG] Status prompt per tenant_id bc4a964a-efde-11ef-9315-96000228e7fe: 0/0 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Gruppo Ospedaliero Leonardo (leonardo) UUID=bc4a964a-efde-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Gruppo Ospedaliero Leonardo (bc4a964a-efde-11ef-9315-96000228e7fe)
📊 Collection generata: leonardo_bc4a964a-efde-11ef-9315-96000228e7fe per tenant Gruppo Ospedaliero Leonardo
✅ MongoClassificationReader inizializzato per tenant: Gruppo Ospedaliero Leonardo
   📊 Collection: leonardo_bc4a964a-efde-11ef-9315-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Gruppo Ospedaliero Leonardo (leonardo)
📊 Collection generata: leonardo_bc4a964a-efde-11ef-9315-96000228e7fe per tenant Gruppo Ospedaliero Leonardo
   📊 Collection: leonardo_bc4a964a-efde-11ef-9315-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: leonardo_bc4a964a-efde-11ef-9315-96000228e7fe per tenant Gruppo Ospedaliero Leonardo
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Gruppo Ospedaliero Leonardo
📊 Calcolo statistiche per tenant: Gruppo Ospedaliero Leonardo
🔍 Risoluzione tenant da UUID: bc4a964a-efde-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Gruppo Ospedaliero Leonardo (leonardo) UUID=bc4a964a-efde-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Gruppo Ospedaliero Leonardo (bc4a964a-efde-11ef-9315-96000228e7fe)
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
🔍 Trovati 22 tenant da TAG.tenants:
  - Alleanza (alleanza) -> a0fd7600-f4f7-11ef-9315-96000228e7fe
  - BluPantheon (blupantheon) -> 6bc4f06f-742e-11f0-acb8-96000228e7fe
  - Boots (boots) -> 0f9d6e90-d319-11ef-86a5-96000228e7fe
  - CEF (cef) -> b1048bdb-b6ff-11ef-86a5-96000228e7fe
  - Cogeda (cogeda) -> cca12133-6955-11f0-9817-96000228e7fe
  - Community (community) -> d365ed2b-b8a6-11ef-86a5-96000228e7fe
  - Consiglio Regione Toscana (crt) -> 78ced6ea-030b-11f0-9a34-96000228e7fe
  - Demo BluPantheon (ai) -> 0c1231de-a58c-11ef-8c7f-96000228e7fe
  - Development BluPantheon (dev) -> 361f77f0-bef1-11ef-86a5-96000228e7fe
  - Don Carlo San Martino (doncarlosanmartino) -> c354c01b-6e25-11f0-acb8-96000228e7fe
  - Fate Bene Fratelli (fatebenefratelli) -> 2d88ac57-73a5-11f0-acb8-96000228e7fe
  - Federfarma Roma (federfarmaroma) -> 3dadd270-3626-11f0-b087-96000228e7fe
  - Forma Camera (formacamera) -> 9b87a910-e477-11ef-9315-96000228e7fe
  - golvalerio (golvalerio) -> f071db89-83e3-11f0-bfd6-96000228e7fe
  - Gruppo Ospedaliero Leonardo (leonardo) -> bc4a964a-efde-11ef-9315-96000228e7fe
  - Homnya (homnya) -> 409a7aa7-fe55-11ef-9a34-96000228e7fe
  - Humanitas (humanitas) -> 015007d9-d413-11ef-86a5-96000228e7fe
  - Mondino (mondino2) -> f7b9e66a-8bd5-11ef-9557-96000228e7fe
  - MSC (msc) -> ccabd07d-1068-11f0-9133-96000228e7fe
  - Ospedale Isola Tiberina - Gemelli Isola (fbf) -> 964e85e1-a7e0-11ef-86a5-96000228e7fe
  - Tenant Evaluation (tenantevaluation) -> 396dba74-4aab-11f0-b6b8-96000228e7fe
  - Wopta (wopta) -> 16c222a9-f293-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Connessione al database TAG chiusa
🔍 Risoluzione tenant da UUID: bc4a964a-efde-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
🔍 Trovati 22 tenant da TAG.tenants:
  - Alleanza (alleanza) -> a0fd7600-f4f7-11ef-9315-96000228e7fe
  - BluPantheon (blupantheon) -> 6bc4f06f-742e-11f0-acb8-96000228e7fe
  - Boots (boots) -> 0f9d6e90-d319-11ef-86a5-96000228e7fe
  - CEF (cef) -> b1048bdb-b6ff-11ef-86a5-96000228e7fe
  - Cogeda (cogeda) -> cca12133-6955-11f0-9817-96000228e7fe
  - Community (community) -> d365ed2b-b8a6-11ef-86a5-96000228e7fe
  - Consiglio Regione Toscana (crt) -> 78ced6ea-030b-11f0-9a34-96000228e7fe
  - Demo BluPantheon (ai) -> 0c1231de-a58c-11ef-8c7f-96000228e7fe
  - Development BluPantheon (dev) -> 361f77f0-bef1-11ef-86a5-96000228e7fe
  - Don Carlo San Martino (doncarlosanmartino) -> c354c01b-6e25-11f0-acb8-96000228e7fe
  - Fate Bene Fratelli (fatebenefratelli) -> 2d88ac57-73a5-11f0-acb8-96000228e7fe
  - Federfarma Roma (federfarmaroma) -> 3dadd270-3626-11f0-b087-96000228e7fe
  - Forma Camera (formacamera) -> 9b87a910-e477-11ef-9315-96000228e7fe
  - golvalerio (golvalerio) -> f071db89-83e3-11f0-bfd6-96000228e7fe
  - Gruppo Ospedaliero Leonardo (leonardo) -> bc4a964a-efde-11ef-9315-96000228e7fe
  - Homnya (homnya) -> 409a7aa7-fe55-11ef-9a34-96000228e7fe
  - Humanitas (humanitas) -> 015007d9-d413-11ef-86a5-96000228e7fe
  - Mondino (mondino2) -> f7b9e66a-8bd5-11ef-9557-96000228e7fe
  - MSC (msc) -> ccabd07d-1068-11f0-9133-96000228e7fe
  - Ospedale Isola Tiberina - Gemelli Isola (fbf) -> 964e85e1-a7e0-11ef-86a5-96000228e7fe
  - Tenant Evaluation (tenantevaluation) -> 396dba74-4aab-11f0-b6b8-96000228e7fe
  - Wopta (wopta) -> 16c222a9-f293-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Gruppo Ospedaliero Leonardo (leonardo) UUID=bc4a964a-efde-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Gruppo Ospedaliero Leonardo (bc4a964a-efde-11ef-9315-96000228e7fe)
Connessione al database TAG stabilita con successo
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Errore durante l'esecuzione della query: 1146 (42S02): Table 'TAG.session_classifications' doesn't exist
Connessione al database TAG chiusa
🔍 [DEBUG] GET /api/prompts/015007d9-d413-11ef-86a5-96000228e7fe/status - Avvio richiesta
🔍 [DEBUG] API: Recupero status prompt per tenant: 015007d9-d413-11ef-86a5-96000228e7fe
✅ [DEBUG] Riconosciuto come tenant_id UUID: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Inizializzo PromptManager...
🔍 [DEBUG] Chiamo get_all_prompts_for_tenant(015007d9-d413-11ef-86a5-96000228e7fe)...
🔍 [DEBUG] Recuperati 5 prompt dal PromptManager
🔍 [DEBUG] Statistiche: 5/5 attivi, 0 inattivi
✅ [DEBUG] Status calcolato: {'success': True, 'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'total_prompts': 5, 'active_prompts': 5, 'inactive_prompts': 0, 'last_updated': '2025-08-30T12:34:13', 'status': 'ready', 'canOperate': True, 'requiredPrompts': [{'name': 'System Prompt', 'type': 'system', 'description': 'Prompt di sistema per la classificazione', 'exists': True}, {'name': 'User Template', 'type': 'user', 'description': 'Template per prompt utente', 'exists': True}, {'name': 'Classification Prompt', 'type': 'classification', 'description': 'Prompt per classificazione intelligente', 'exists': False}], 'missingCount': 1}
✅ [DEBUG] Status prompt per tenant_id 015007d9-d413-11ef-86a5-96000228e7fe: 5/5 attivi
🔍 [DEBUG] Invio risposta JSON per status prompt
🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas
🎯 TRAINING SUPERVISIONATO - Cliente: 015007d9-d413-11ef-86a5-96000228e7fe
📋 Parametri utente semplificati:
  � Max sessioni review: 500
  🎯 Soglia confidenza: 0.95
  🔄 Forza review: True
  ⚖️  Soglia disagreement: 0.3
🔧 Inizializzazione pipeline per cliente: 015007d9-d413-11ef-86a5-96000228e7fe (con lock)
⚠️ [PIPELINE] DEPRECATO: uso di tenant_slug '015007d9-d413-11ef-86a5-96000228e7fe' - convertendo a oggetto Tenant
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
🔄 [PIPELINE] Conversione completata: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
✅ [CONFIG] Configurazione base caricata da /home/ubuntu/classificatore/Utils/../config.yaml
🎯 [PIPELINE CLUSTERING CONFIG] Caricati parametri personalizzati per tenant 015007d9-d413-11ef-86a5-96000228e7fe:
   allow_single_cluster: non_definito -> False
   alpha: non_definito -> 0.7
   cluster_selection_epsilon: non_definito -> 0.13
   cluster_selection_method: non_definito -> leaf
   max_cluster_size: non_definito -> 0
   metric: non_definito -> euclidean
   min_cluster_size: 5 -> 21
   min_samples: 3 -> 14
   only_user: non_definito -> False
   umap_metric: non_definito -> cosine
   umap_min_dist: non_definito -> 0.05
   umap_n_components: non_definito -> 100
   umap_n_neighbors: non_definito -> 15
   umap_random_state: non_definito -> 42
   use_umap: non_definito -> True

🚀 [FASE 1: INIZIALIZZAZIONE] Avvio pipeline...
🏥 [FASE 1: INIZIALIZZAZIONE] Tenant: humanitas
🎯 [FASE 1: INIZIALIZZAZIONE] Configurazione:
   📊 Confidence threshold: 0.7
   🤖 Auto mode: True
   🔄 Auto retrain: False
� [FASE 1: INIZIALIZZAZIONE] Inizializzazione lettore conversazioni...
✅ [CONFIG] Configurazione base caricata da /home/ubuntu/classificatore/Utils/../config.yaml
✅ [CONFIG] Config personalizzata tenant 015007d9-d413-11ef-86a5-96000228e7fe: 15 parametri
🎯 [ONLY_USER] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: False (da config personalizzata)
🎯 [LETTORE] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: only_user = False (da config tenant)
� [FASE 1: INIZIALIZZAZIONE] Inizializzazione aggregator...
   🔍 Schema: 'humanitas'
   🆔 Tenant ID: '015007d9-d413-11ef-86a5-96000228e7fe'
🎯 [SESSION AGGREGATOR] Inizializzazione con oggetto Tenant: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
🎯 [ONLY_USER] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: False (da config personalizzata)
🎯 [LETTORE] Tenant 015007d9-d413-11ef-86a5-96000228e7fe: only_user = False (da config tenant)
� [ONLY_USER] Schema None: False (legacy - no tenant_id)
🧠 [FASE 1: INIZIALIZZAZIONE] Sistema embedder dinamico (lazy loading)
🔧 [FASE 1: INIZIALIZZAZIONE] Parametri clustering:
   📊 Min cluster size: 21
   📊 Min samples: 14
🐛 DEBUG CLUSTER_ALPHA - PRIMA:
   📋 clustering_config.get('alpha', 1.0): 0.7
   📋 Type: <class 'float'>
🐛 DEBUG CLUSTER_ALPHA - DOPO CONVERSIONE:
   📋 cluster_alpha: 0.7
   📋 Type: <class 'float'>
🐛 DEBUG CLUSTER_ALPHA - FINALE:
   📋 cluster_alpha finale: 0.7
   📋 Type finale: <class 'float'>
   📋 Alpha > 0: True
✅ [CONFIG] Config personalizzata tenant 015007d9-d413-11ef-86a5-96000228e7fe: 15 parametri
🗂️  [UMAP] Parametri per tenant 015007d9-d413-11ef-86a5-96000228e7fe:
   use_umap: True
   n_neighbors: 15
   min_dist: 0.05
   n_components: 100
   metric: cosine
🔧 [FIX DEBUG] Parametri tenant passati a HDBSCANClusterer:
   min_cluster_size: 21
   min_samples: 14
   alpha: 0.7
   cluster_selection_method: leaf
   cluster_selection_epsilon: 0.13
   metric: euclidean
   allow_single_cluster: False
   max_cluster_size: 0
   🗂️  use_umap: True
   🗂️  umap_n_neighbors: 15
   🗂️  umap_min_dist: 0.05
   🗂️  umap_n_components: 100
🎯 [BERTOPIC] Parametri consistenti configurati:
   📊 HDBSCAN: 10 parametri
   📊 UMAP: 5 parametri
🔧 HDBSCANClusterer inizializzato:
   min_cluster_size: 21
   min_samples: 14
   metric: euclidean
   cluster_selection_epsilon: 0.13
   🗂️  UMAP enabled: True
     📏 n_neighbors: 15
     📐 min_dist: 0.05
     📊 n_components: 100
     🎯 metric: cosine
   🚀 GPU enabled: True
   💾 GPU memory limit: 80%
   🔄 CPU fallback: True
   ⚠️  [GPU MODE] Limitazioni cuML HDBSCAN:
     🚫 leaf_size=40 sarà IGNORATO su GPU
     ✅ Parametri supportati: cluster_selection_method, alpha, allow_single_cluster
🎯 [DEBUG REACT] Parametri configurati:
   cluster_selection_method: leaf
   alpha: 0.7
   allow_single_cluster: False
🧠 Inizializzazione memoria semantica...
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🔧 TokenizationManager inizializzato:
   📊 Modello tokenizer: cl100k_base
   🔢 Limite massimo token: 8000
   ✂️  Strategia troncamento: start
✅ TokenizationManager integrato in LaBSE per gestione conversazioni lunghe
🚀 Inizializzazione LaBSE embedder su device: cuda
📥 Caricamento modello sentence-transformers/LaBSE...
🚀 Caricamento diretto su GPU...
✅ Modello caricato con successo!
📊 Dimensione embedding: 768
🔧 Device: cuda
🎮 GPU: NVIDIA A10G
💾 GPU Memory: 23.7 GB
📈 GPU Memory utilizzata: 1.89 GB
� Primo parametro su device: cuda:0
🧪 Test del modello LaBSE...
🔍 Encoding 3 testi con LaBSE su device cuda...

🔍 TOKENIZZAZIONE PREVENTIVA LABSE CLUSTERING
============================================================
🔍 ELABORAZIONE CONVERSAZIONI PER CLUSTERING
   📊 Numero conversazioni: 3
   🆔 Session IDs forniti: No

📊 STATISTICHE ELABORAZIONE:
   🔢 Conversazioni totali: 3
   ✂️  Conversazioni troncate: 0
   📏 Token originali totali: 20
   📐 Token finali totali: 20
   📊 Range token: 6 - 7
✅ Tokenizzazione LaBSE completata:
   📊 Conversazioni processate: 3
   📊 Conversazioni troncate: 0
   📊 Token limite configurato: 8000
   ✅ Tutte le conversazioni entro i limiti, nessun troncamento
============================================================
✅ Embedding generati: shape (3, 768)
✅ Test modello completato con successo!
   Shape: (3, 768)
   Norme: [0.99999994 1.         1.        ]
   Device: cuda
🎯 Modello pronto per l'uso!
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🧠 SemanticMemoryManager inizializzato
  🎯 Soglia riutilizzo etichette: 0.8
  🔍 Soglia similarità semantica: 0.8
  💾 Cache path: semantic_cache/humanitas_015007d9_memory
🔗 Inizializzazione ensemble classifier avanzato...
🔍 ML Ensemble Debugger inizializzato e ATTIVO
   📝 Debug file: ./debug_logs/ml_debug.log
🔍 ML Ensemble Debugger attivato
🔧 Tentativo di inizializzazione IntelligentClassifier tramite LLMFactory...
🧠 GPU Memory prima di LLM: 1.8GB/22.1GB (free: 20.3GB)
✅ Memoria GPU sufficiente, inizializzazione LLM tramite Factory...
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🏭 LLM Factory inizializzato con cache invalidation intelligente
🔍 LLM FACTORY DEBUG: Chiamata ai_config_service.get_tenant_configuration(humanitas) normale...
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id humanitas
🔍 [DEBUG] Query eseguita per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54)}
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
🎯 LLM FACTORY DEBUG: Modello normale = 'mistral:7b'
🔧 Creazione LLM classifier mistral:7b per tenant humanitas
🚀 LLM FACTORY DEBUG: Avvio creazione nuovo classifier modello 'mistral:7b'
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto da slug (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
🔍 LLM Debugger inizializzato e ATTIVO
   📝 Debug file: ./debug_logs/llm_debug.log
   🎨 Visual formatting: True
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🗄️ MongoClassificationReader inizializzato per tenant: Humanitas
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
Connessione al database TAG stabilita con successo
📋 Recuperati 265 tag dal database TAGS per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
🔧 TokenizationManager inizializzato:
   📊 Modello tokenizer: cl100k_base
   🔢 Limite massimo token: 8000
   ✂️  Strategia troncamento: start
✅ LLM FACTORY DEBUG: Nuovo classifier creato: mistral:7b
✅ LLM Classifier mistral:7b (mistral:7b) creato e cached per tenant humanitas
🏭 LLM classifier ottenuto tramite Factory per tenant humanitas
🤖 LLM classifier creato automaticamente nell'ensemble: mistral:7b
💡 Possibile fine-tuning per humanitas
🔗 Advanced Ensemble Classifier inizializzato
   🧠 LLM weight: 0.60
   🤖 ML weight: 0.40
   🎯 Confidence threshold: 0.7
   🔄 Adaptive weights: True
   👤 Disaccordi gestiti da QualityGateEngine
📥 Caricamento ultimo modello per humanitas: humanitas_015007d9_20250829_181313
📥 Caricamento ensemble model...
✅ ML ensemble caricato
✅ Configurazione caricata
🔗 Ensemble model caricato da models/humanitas_015007d9_20250829_181313
✅ Modello caricato con successo

🔍 VERIFICA BERTOPIC LOADING:
   📋 BERTopic enabled: True
   📋 BERTopic available: True
   📁 Provider directory: models/humanitas_015007d9_20250829_181313_bertopic
   📁 Directory exists: True
   � File trovati: 3 -> ['metadata.json', 'bertopic_model', 'svd_model.pkl']

🔄 CARICAMENTO BERTOPIC:
   📁 Path completo: /home/ubuntu/classificatore/models/humanitas_015007d9_20250829_181313_bertopic
🔄 Caricamento BERTopic model da models/humanitas_015007d9_20250829_181313_bertopic/bertopic_model
✅ BERTopic model caricato con successo
📥 SVD caricato (svd_model.pkl)
   ⏱️ Caricamento completato in 0.51 secondi
   ✅ BERTopic provider caricato con successo
🔗 BERTopic provider impostato (top_k=10, one_hot=False)
   ✅ BERTopic provider configurato nell'ensemble
⏸️ Riaddestramento automatico disabilitato (modalità supervisione/API)
   💡 Per abilitare, usare auto_retrain=True nell'inizializzazione
✅ Classificatore LLM disponibile nell'ensemble
👤 Inizializzazione trainer interattivo...
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
🎯 SIMPLE MANAGER: Richiesta embedder per tenant 015007d9-d413-11ef-86a5-96000228e7fe
📥 Primo embedder - creazione per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🚀 CREATING FRESH EMBEDDER per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id 015007d9-d413-11ef-86a5-96000228e7fe
🔧 FORCE NO CACHE: Bypass cache per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔥 FORCE NO CACHE: Bypasso cache e leggo DIRETTAMENTE dal database per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Query eseguita per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54)}
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
🔍 SIMPLE MANAGER: Engine da DB per 015007d9-d413-11ef-86a5-96000228e7fe = 'labse'
🎯 Engine configurato: labse
🔧 DIRECT CREATE: labse
🐳 Tentativo connessione a servizio LaBSE dockerizzato...
🔗 LaBSE Remote Client inizializzato
   📡 Service URL: http://localhost:8081
   ⏱️  Timeout: 300s
   🔄 Max retries: 3
   🛡️ Fallback locale: True
🔧 Inizializzazione client remoto LaBSE...
✅ Servizio embedding online e funzionante
✅ Client remoto LaBSE inizializzato con successo
✅ LaBSE Remote Client configurato con successo
✅ FRESH EMBEDDER creato: LaBSERemoteClient per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🧠 Inizializzazione dedupplicatore intelligente...
💾 [FASE 1: INIZIALIZZAZIONE] Caricamento memoria semantica...
🔄 Caricamento memoria semantica dal database...
🔄 Caricamento memoria semantica da MongoDB...
✅ Connesso a MongoDB database: classificazioni
📊 Recupero sessioni per tenant: Humanitas
   📂 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
📚 Trovate 2 classificazioni esistenti in MongoDB
  📝 Tag 'info_visita_medica': 1 sessioni classificate
  📝 Tag 'altro': 1 sessioni classificate
✅ Memoria semantica caricata: 2 tag, 2 sessioni
   📊 Campioni: 2
   🏷️ Tag: 2
✅ [FASE 1: INIZIALIZZAZIONE] Completata in 5.56s
🎯 [FASE 1: INIZIALIZZAZIONE] Pipeline pronta per l'uso!
✅ Pipeline 015007d9-d413-11ef-86a5-96000228e7fe inizializzata
🚀 TRAINING SUPERVISIONATO CON DATASET COMPLETO
  📊 Estrazione: TUTTE le discussioni dal database
  🧩 Clustering: Su tutto il dataset disponibile
  👤 Review umana: Max 500 sessioni rappresentative
🎯 Confidence threshold aggiornato a: 0.95
🎓 TRAINING SUPERVISIONATO AVANZATO
� NUOVA LOGICA:
  🔄 Estrazione: TUTTE le discussioni dal database
  🧩 Clustering: Su tutto il dataset completo
  👤 Review umana: Massimo 500 sessioni rappresentative
--------------------------------------------------
📊 FASE 1: ESTRAZIONE COMPLETA DATASET

� [FASE 2: ESTRAZIONE] Avvio estrazione sessioni...
🏥 [FASE 2: ESTRAZIONE] Tenant: humanitas
📅 [FASE 2: ESTRAZIONE] Giorni indietro: 7
🔄 [FASE 2: ESTRAZIONE] Modalità COMPLETA attivata
🎯 [FASE 2: ESTRAZIONE] Ignorando limite - estrazione totale dataset
� [FASE 2: ESTRAZIONE] Modalità: COMPLETA
� [FASE 2: ESTRAZIONE] Connessione database...
📊 [DEBUG ONLY_USER] Estrazione sessioni aggregate dal schema 'humanitas'...
🎯 [DEBUG ONLY_USER] Parametro only_user = False (tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe)
📄 [DEBUG ONLY_USER] Estrazione completa (senza limite)
📄 [DEBUG ONLY_USER] Filtraggio standard: messaggi USER e AGENT
🔍 [DEBUG ONLY_USER] Esecuzione query per leggere conversazioni dal schema 'humanitas'...
🎯 [DEBUG ONLY_USER] Parametro only_user = False
📋 [DEBUG ONLY_USER] Filtro applicato: WHERE csm.said_by IN ('USER', 'AGENT')
Connessione al database MySQL stabilita con successo
✅ [DEBUG ONLY_USER] Query eseguita con successo!
📊 [DEBUG ONLY_USER] Totale righe: 21585
👤 [DEBUG ONLY_USER] Messaggi USER: 10774
🤖 [DEBUG ONLY_USER] Messaggi AGENT: 10811
✅ [DEBUG ONLY_USER] Filtro funziona correttamente!
✅ Trovate 21585 righe da aggregare
🔄 [DEBUG ONLY_USER] Inizio generazione testo completo per 4305 sessioni
🔍 [DEBUG ONLY_USER] Sessione 0008ef4f-c2f4-4f5e-933e-646574f3638c: 3 USER, 3 AGENT
📝 [DEBUG ONLY_USER] Sessione 0008ef4f-c2f4-4f5e-933e-646574f3638c testo finale:
   [UTENTE] tags: 2
   [ASSISTENTE] tags: 2
   Lunghezza testo: 554 caratteri
🔍 [DEBUG ONLY_USER] Sessione 000b61d7-4431-40d2-b83c-9abbb70c98be: 4 USER, 4 AGENT
📝 [DEBUG ONLY_USER] Sessione 000b61d7-4431-40d2-b83c-9abbb70c98be testo finale:
   [UTENTE] tags: 3
   [ASSISTENTE] tags: 3
   Lunghezza testo: 1133 caratteri
🔍 [DEBUG ONLY_USER] Sessione 00160700-ac7f-463d-8fa0-fe57f74a73e6: 4 USER, 4 AGENT
✅ Aggregate 4305 sessioni uniche
🔄 Saltati 8610 messaggi di benvenuto (primi 2 per sessione)
🔄 Sessioni vuote (solo benvenuto): 906
📥 [FASE 2: ESTRAZIONE] Sessioni grezze: 4305
🔍 [FASE 2: ESTRAZIONE] Filtraggio sessioni...
🔍 Filtraggio sessioni vuote/irrilevanti...
✅ Filtro completato:
  📊 Sessioni originali: 4305
  ❌ Sessioni scartate: 906
  ✅ Sessioni valide: 3399
✅ [FASE 2: ESTRAZIONE] Completata in 0.65s
📊 [FASE 2: ESTRAZIONE] Dataset completo: 3399 sessioni
🗑️ [FASE 2: ESTRAZIONE] Filtrate: 906 sessioni vuote/irrilevanti
🎯 [FASE 2: ESTRAZIONE] Pronte per clustering completo
✅ Dataset completo: 3399 sessioni totali

📊 FASE 2: CLUSTERING COMPLETO

🚀 [FASE 4: CLUSTERING] Avvio clustering intelligente...
📊 [FASE 4: CLUSTERING] Dataset: 3399 sessioni
🎯 [FASE 4: CLUSTERING] Modalità: INTELLIGENTE
🧠 [FASE 4: CLUSTERING] Clustering incrementale (se possibile)...

🚀 [FASE 3: EMBEDDINGS] Avvio generazione embeddings...
� [FASE 3: EMBEDDINGS] Dataset: 3399 sessioni
📊 [FASE 3: EMBEDDINGS] Caratteristiche testo:
   📏 Lunghezza media: 1012 caratteri
   📏 Lunghezza massima: 29104 caratteri
   📏 Lunghezza minima: 75 caratteri
🧠 [FASE 3: EMBEDDINGS] Generazione embeddings...
🔄 LAZY LOADING: Caricamento embedder dinamico per tenant 'humanitas'
🎯 SimpleEmbeddingManager inizializzato
🔄 SIMPLE MANAGER: Normalizzato 'humanitas' -> '015007d9-d413-11ef-86a5-96000228e7fe'
🎯 SIMPLE MANAGER: Richiesta embedder per tenant 015007d9-d413-11ef-86a5-96000228e7fe
📥 Primo embedder - creazione per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🚀 CREATING FRESH EMBEDDER per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🎛️ Configurazioni AI saranno salvate su DATABASE MySQL
🎛️ AIConfigurationService inizializzato
   � Backend: DATABASE MySQL
   🔑 OpenAI API Key: ✅ Configurata
🔄 DatabaseAI: Modalità legacy - risolvo tenant_id 015007d9-d413-11ef-86a5-96000228e7fe
🔧 FORCE NO CACHE: Bypass cache per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔥 FORCE NO CACHE: Bypasso cache e leggo DIRETTAMENTE dal database per tenant 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Query eseguita per tenant_id: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 [DEBUG] Risultato database: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'embedding_config': None, 'llm_config': None, 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54)}
🔍 [DEBUG AIConfig] db_config ricevuto: {'tenant_id': '015007d9-d413-11ef-86a5-96000228e7fe', 'tenant_name': 'Humanitas', 'tenant_slug': 'humanitas', 'embedding_engine': 'labse', 'llm_engine': 'mistral:7b', 'is_active': 1, 'updated_at': datetime.datetime(2025, 8, 28, 16, 51, 54), 'embedding_config': {}, 'llm_config': {}}
🔍 [DEBUG AIConfig] llm_engine nel db_config: mistral:7b
🔍 SIMPLE MANAGER: Engine da DB per 015007d9-d413-11ef-86a5-96000228e7fe = 'labse'
🎯 Engine configurato: labse
🔧 DIRECT CREATE: labse
🐳 Tentativo connessione a servizio LaBSE dockerizzato...
🔗 LaBSE Remote Client inizializzato
   📡 Service URL: http://localhost:8081
   ⏱️  Timeout: 300s
   🔄 Max retries: 3
   🛡️ Fallback locale: True
🔧 Inizializzazione client remoto LaBSE...
✅ Servizio embedding online e funzionante
✅ Client remoto LaBSE inizializzato con successo
✅ LaBSE Remote Client configurato con successo
✅ FRESH EMBEDDER creato: LaBSERemoteClient per tenant 015007d9-d413-11ef-86a5-96000228e7fe
✅ Embedder caricato per tenant UUID 'humanitas': LaBSERemoteClient
📡 Richiesta embedding remoto per 3399 testi...
✅ Embedding remoto completato in 6.931s
   📊 Shape: (3399, 768)
   ⚡ Tempo servizio: 3.432s
✅ [FASE 3: EMBEDDINGS] Completata in 7.10s
📈 [FASE 3: EMBEDDINGS] Shape: (3399, 768)
⚡ [FASE 3: EMBEDDINGS] Throughput: 479.0 testi/secondo

📊 FASE 2A: TRAINING BERTOPIC ANTICIPATO

🚀 TRAINING BERTOPIC ANTICIPATO (NUOVO FLUSSO OTTIMIZZATO):
   📊 Dataset completo: 3399 sessioni
   📊 Embeddings shape: (3399, 768)
   🎯 Addestramento su TUTTO il dataset per features ottimali
   🔥 Esecuzione bertopic_provider.fit() su dataset completo...
📊 BERTopic training su 3399 campioni
   🎯 Embedder configurato: LaBSERemoteClient
   🔧 STRATEGIA: BERTopic userà embedder personalizzato via wrapper
   ✅ Wrapper embedder creato per BERTopic
   🔧 BERTopic userà embedder personalizzato interno
✅ BERTopic FIT completato su 3399 campioni
   🔧 SVD Training: Usando embedder personalizzato interno
✅ SVD addestrato su full probas (k=20)
   ✅ BERTopic FIT completato in 41.15 secondi
   🔄 Esecuzione bertopic_provider.transform() per features extraction...
🔧 Transform: BERTopic userà embedder personalizzato interno
   ✅ BERTopic TRANSFORM completato in 4.53 secondi
   📊 Topic probabilities shape: (3399, 20)
   📊 One-hot shape: None
   ✅ BERTopic provider addestrato con successo su 3399 sessioni
   ✅ BERTopic provider disponibile per augmentation features
   🔗 BERTopic model assegnato al trainer per validazione ALTRO

📊 FASE 2B: CLUSTERING HDBSCAN
🧠 Usando clustering INTELLIGENTE (LLM + ML senza pattern)
🗂️  [DEBUG] Caricamento config tenant-specific: /home/ubuntu/classificatore/tenant_configs/015007d9-d413-11ef-86a5-96000228e7fe_clustering.yaml
🗂️  [DEBUG] Config tenant caricato: ['allow_single_cluster', 'alpha', 'cluster_selection_epsilon', 'cluster_selection_method', 'max_cluster_size', 'metric', 'min_cluster_size', 'min_samples', 'only_user', 'umap_metric', 'umap_min_dist', 'umap_n_components', 'umap_n_neighbors', 'umap_random_state', 'use_umap']
🗂️  [DEBUG] UMAP config finale: use_umap=True, n_components=100, min_dist=0.05
🧠 Clustering intelligente configurato:
   🎯 Categorie intent suggerite: 12
   🤖 LLM primario: True
   📊 Min confidence: 0.8
   📈 Min conversations per intent: 2
   👥 Rappresentanti diversificati: True
   🔢 Max rappresentanti per cluster: 5
   🤝 Strategia consenso: majority
🧠 Avvio clustering intelligente OTTIMIZZATO di 3399 conversazioni...
📊 Fase 1: Clustering semantico con HDBSCAN...
🔧 HDBSCANClusterer inizializzato:
   min_cluster_size: 21
   min_samples: 14
   metric: euclidean
   cluster_selection_epsilon: 0.13
   🗂️  UMAP enabled: True
     📏 n_neighbors: 15
     📐 min_dist: 0.05
     📊 n_components: 100
     🎯 metric: cosine
   🚀 GPU enabled: True
   💾 GPU memory limit: 80%
   🔄 CPU fallback: True
   ⚠️  [GPU MODE] Limitazioni cuML HDBSCAN:
     🚫 leaf_size=40 sarà IGNORATO su GPU
     ✅ Parametri supportati: cluster_selection_method, alpha, allow_single_cluster
🎯 [DEBUG REACT] Parametri configurati:
   cluster_selection_method: eom
   alpha: 1.0
   allow_single_cluster: False
🔍 Clustering HDBSCAN su 3399 embedding (19.9MB)...
⚙️  Parametri: min_cluster_size=21, min_samples=14, metric=euclidean
📊 [DEBUG FIT_PREDICT] Embedding input:
   📏 Shape: (3399, 768)
   🔢 Dtype: float64
   📈 Range: [-0.1284, 0.0954]
   💾 Memory: 19.9MB

🗂️  [DEBUG FIT_PREDICT] STEP 1: Controllo applicazione UMAP...
🔍 [DEBUG UMAP] Controllo condizioni applicazione UMAP...
   ✅ self.use_umap = True
   ✅ UMAP_AVAILABLE = True
� [DEBUG UMAP] UMAP ABILITATO - Iniziando riduzione dimensionale...
   📏 Dimensioni input: (3399, 768)
   🔢 Tipo dati input: float64
   📊 Range valori input: [-0.1284, 0.0954]
   🎯 Parametri UMAP configurati:
     📐 n_neighbors: 15
     📏 min_dist: 0.05
     🔢 n_components: 100
     📈 metric: cosine
     🎲 random_state: 42
🔧 [DEBUG UMAP] Inizializzazione riduttore UMAP...
🆕 [DEBUG UMAP] Modalità TRAINING - fit nuovo reducer
✅ [DEBUG UMAP] Riduttore UMAP inizializzato con successo
⏳ [DEBUG UMAP] Applicazione fit_transform agli embeddings...
UMAP(angular_rp_forest=True, metric='cosine', min_dist=0.05, n_components=100, n_jobs=1, random_state=42, verbose=True)
Sun Aug 31 09:55:33 2025 Construct fuzzy simplicial set
Sun Aug 31 09:55:48 2025 Finding Nearest Neighbors
Sun Aug 31 09:55:49 2025 Finished Nearest Neighbor Search
Sun Aug 31 09:55:49 2025 Construct embedding
	completed  0  /  500 epochs
	completed  50  /  500 epochs
🔧 Creazione MongoClassificationReader per cliente: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
✅ MongoClassificationReader inizializzato per tenant: Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Alleanza (alleanza)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
	completed  100  /  500 epochs
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Alleanza
📊 Calcolo statistiche per tenant: Alleanza
🔧 Creazione MongoClassificationReader per cliente: a0fd7600-f4f7-11ef-9315-96000228e7fe
🔍 Risoluzione tenant da UUID: a0fd7600-f4f7-11ef-9315-96000228e7fe
	completed  150  /  500 epochs
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Alleanza (alleanza) UUID=a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Tenant risolto da UUID: Alleanza (a0fd7600-f4f7-11ef-9315-96000228e7fe)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
✅ MongoClassificationReader inizializzato per tenant: Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Alleanza (alleanza)
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
   📊 Collection: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: alleanza_a0fd7600-f4f7-11ef-9315-96000228e7fe per tenant Alleanza
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Alleanza
📊 Calcolo statistiche per tenant: Alleanza
	completed  200  /  500 epochs
	completed  250  /  500 epochs
	completed  300  /  500 epochs
	completed  350  /  500 epochs
	completed  400  /  500 epochs
	completed  450  /  500 epochs
Sun Aug 31 09:56:01 2025 Finished embedding
✅ [DEBUG UMAP] UMAP COMPLETATO con SUCCESSO in 27.15s
   📐 Dimensioni output: (3399, 100)
   � Tipo dati output: float32
   �📊 Range valori output: [-2.8744, 11.2292]
   📈 Riduzione dimensionale: 768 → 100 dimensioni
   📉 Fattore riduzione: 7.7x
✅ [DEBUG UMAP] RIDUZIONE DIMENSIONALE CONFERMATA
✅ [DEBUG UMAP] Nessun NaN nel risultato UMAP
✅ [DEBUG UMAP] Nessun valore infinito nel risultato UMAP
📊 [DEBUG UMAP] Diversità embeddings ridotti: 3399/3399 righe uniche
✅ [DEBUG UMAP] Buona diversità negli embeddings ridotti
📋 [DEBUG UMAP] Info riduzione salvate nel clusterer
📋 [DEBUG FIT_PREDICT] Risultato UMAP:
   ✅ UMAP applicato: True
   📏 Shape post-UMAP: (3399, 100)
   📈 Range post-UMAP: [-2.8744, 11.2292]
   ⏱️  Tempo riduzione: 27.15s

🔧 [DEBUG FIT_PREDICT] STEP 2: Normalizzazione per metrica euclidean...
   🎯 Nessuna normalizzazione necessaria per metrica euclidean
   📏 Shape finale per clustering: (3399, 100)
   📈 Range finale: [-2.8744, 11.2292]
   🎯 Metrica effettiva clustering: euclidean
💾 Memoria GPU: 17.7GB disponibili, 0.1GB necessari
🚀 Utilizzo GPU per clustering accelerato

🚀 [DEBUG FIT_PREDICT] STEP 3: Avvio clustering...
   🖥️  Modalità: GPU
� [GPU CLUSTERING] Inizializzazione cuML HDBSCAN con parametri supportati...

✅ [DEBUG FIT_PREDICT] CLUSTERING COMPLETATO in 0.11s con 🚀 GPU!
📊 Risultati finali:
   🎯 Cluster trovati: 38
   🔍 Outlier: 849 (25.0%)
   📈 Silhouette score: 0.653

📋 [DEBUG FIT_PREDICT] RIEPILOGO TRASFORMAZIONI:
   🔤 Input originale: (3399, 768)
   🗂️  Dopo UMAP: (3399, 100)
   🔧 Dopo normalizzazione: (3399, 100)
   🎯 Utilizzato per clustering: (3399, 100) con metrica euclidean
   📈 Cluster HDBSCAN trovati: 38
   🔍 Outliers: 849
👥 Fase 2: Selezione rappresentanti per cluster...
   � Cluster 0: 45 sessioni, 4 rappresentanti selezionati
   � Cluster 1: 35 sessioni, 4 rappresentanti selezionati
   � Cluster 2: 28 sessioni, 4 rappresentanti selezionati
   � Cluster 3: 96 sessioni, 5 rappresentanti selezionati
   � Cluster 4: 299 sessioni, 5 rappresentanti selezionati
   � Cluster 5: 156 sessioni, 5 rappresentanti selezionati
   � Cluster 6: 46 sessioni, 4 rappresentanti selezionati
   � Cluster 7: 96 sessioni, 5 rappresentanti selezionati
   � Cluster 8: 65 sessioni, 5 rappresentanti selezionati
   � Cluster 9: 156 sessioni, 5 rappresentanti selezionati
   � Cluster 10: 29 sessioni, 4 rappresentanti selezionati
   � Cluster 11: 45 sessioni, 4 rappresentanti selezionati
   � Cluster 12: 51 sessioni, 5 rappresentanti selezionati
   � Cluster 13: 63 sessioni, 5 rappresentanti selezionati
   � Cluster 14: 27 sessioni, 4 rappresentanti selezionati
   � Cluster 15: 47 sessioni, 4 rappresentanti selezionati
   � Cluster 16: 37 sessioni, 4 rappresentanti selezionati
   � Cluster 17: 191 sessioni, 5 rappresentanti selezionati
   � Cluster 18: 102 sessioni, 5 rappresentanti selezionati
   � Cluster 19: 33 sessioni, 4 rappresentanti selezionati
   � Cluster 20: 37 sessioni, 4 rappresentanti selezionati
   � Cluster 21: 26 sessioni, 4 rappresentanti selezionati
   � Cluster 22: 27 sessioni, 4 rappresentanti selezionati
   � Cluster 23: 57 sessioni, 5 rappresentanti selezionati
   � Cluster 24: 35 sessioni, 4 rappresentanti selezionati
   � Cluster 25: 72 sessioni, 5 rappresentanti selezionati
   � Cluster 26: 22 sessioni, 4 rappresentanti selezionati
   � Cluster 27: 144 sessioni, 5 rappresentanti selezionati
   � Cluster 28: 34 sessioni, 4 rappresentanti selezionati
   � Cluster 29: 33 sessioni, 4 rappresentanti selezionati
   � Cluster 30: 50 sessioni, 4 rappresentanti selezionati
   � Cluster 31: 117 sessioni, 5 rappresentanti selezionati
   � Cluster 32: 23 sessioni, 4 rappresentanti selezionati
   � Cluster 33: 97 sessioni, 5 rappresentanti selezionati
   � Cluster 34: 24 sessioni, 4 rappresentanti selezionati
   � Cluster 35: 42 sessioni, 4 rappresentanti selezionati
   � Cluster 36: 41 sessioni, 4 rappresentanti selezionati
   � Cluster 37: 22 sessioni, 4 rappresentanti selezionati
🤖 Fase 3: Analisi LLM di 167 rappresentanti...
🤖 Analisi LLM di 167 conversazioni...
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 338
   📊 Token totali: 786
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 786 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 338
   📊 Token conversazione finale: 338
   📊 Token totali: 786
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1089 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao, vorrei prenotare un intervento in regime privato, come devo fare? [ASSISTENTE] Per prenotare un ricovero privato presso Humanitas, puoi contattare l'Ufficio Ricoveri Privati chiamando il numero 02 82 24 62 50, attivo dal lunedì al venerdì dalle 8:00 alle 17:00, oppure inviare un'em..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2848 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 338
   📊 Token totali stimati: 786
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao, vorrei prenotare un intervento in regime privato, come devo fare? [ASSISTENTE] Per prenotare un ricovero privato presso Humanitas, puoi contattare l'Ufficio Ricoveri Privati chiamando il numero 02 82 24 62 50, attivo dal lunedì al venerdì dalle 8:00 alle 17:00, oppure inviare un'em..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:06.868852
====================================================================================================
📋 Session ID: classify_1756634166
⏱️  Processing Time: 5.408s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1089 chars):
   [UTENTE] Ciao, vorrei prenotare un intervento in regime privato, come devo fare? [ASSISTENTE] Per prenotare un ricovero privato presso Humanitas, puoi contattare l'Ufficio Ricoveri Privati chiamand...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (449 chars):
   {'predicted_label': 'prenotazione', 'confidence': 0.98, 'motivation': "La conversazione riguarda la prenotazione di un intervento in regime privato presso Humanitas. L'utente chiede come procedere e l'assistente fornisce le informazioni necessarie per contattare l'Ufficio Ricoveri Privati e invia...

📊 Parsed Response:
   predicted_label: prenotazione
   confidence: 0.98
   motivation: La conversazione riguarda la prenotazione di un intervento in regime privato presso Humanitas. L'utente chiede come procedere e l'assistente fornisce le informazioni necessarie per contattare l'Ufficio Ricoveri Privati e invia una richiesta di email. Inoltre, l'assistente suggerisce di consultare la pagina delle prenotazioni sul sito web di Humanitas per ulteriori dettagli.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la prenotazione di un intervento in regime privato presso Humanitas. L'utente chiede come procedere e l'assistente fornisce le informazioni necessarie per contattare l'Ufficio Ricoveri Privati e invia una richiesta di email. Inoltre, l'assistente suggerisce di consultare la pagina delle prenotazioni sul sito web di Humanitas per ulteriori dettagli.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 994777348e56d6c19c747e60c3684247 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 196
   📊 Token totali: 644
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 644 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 196
   📊 Token conversazione finale: 196
   📊 Token totali: 644
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 629 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Mi dai l'indirizzo della sede di Wopta?"
Output: info_sede_aziendale
Ragionamento: Richiesta informazioni sulla sede aziendale
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Non ho ricevuto la documentazione della polizza"
Output: problema_amministrativo
Ragionamento: Problemi con documenti o questioni amministrative
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza


TESTO DA CLASSIFICARE:
"[UTENTE] Volevo sapere se nel Building 8 c'è una cappella e a che ora fanno la messa il sabato e la domenica  [ASSISTENTE] Nel Building 8 di Humanitas è presente una cappella dedicata al culto cattolico situata al piano terra. [...]  Buona giornata!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2816 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 196
   📊 Token totali stimati: 644
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Mi dai l'indirizzo della sede di Wopta?"
Output: info_sede_aziendale
Ragionamento: Richiesta informazioni sulla sede aziendale
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Non ho ricevuto la documentazione della polizza"
Output: problema_amministrativo
Ragionamento: Problemi con documenti o questioni amministrative
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza


TESTO DA CLASSIFICARE:
"[UTENTE] Volevo sapere se nel Building 8 c'è una cappella e a che ora fanno la messa il sabato e la domenica  [ASSISTENTE] Nel Building 8 di Humanitas è presente una cappella dedicata al culto cattolico situata al piano terra. [...]  Buona giornata!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:10.151475
====================================================================================================
📋 Session ID: classify_1756634170
⏱️  Processing Time: 3.190s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (629 chars):
   [UTENTE] Volevo sapere se nel Building 8 c'è una cappella e a che ora fanno la messa il sabato e la domenica  [ASSISTENTE] Nel Building 8 di Humanitas è presente una cappella dedicata al culto catt...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (428 chars):
   {'predicted_label': 'info_cappella', 'confidence': 0.98, 'motivation': "La conversazione riguarda la richiesta dell'utente di sapere se nel Building 8 c'è una cappella e a che orario fanno le messe il sabato e la domenica. L'assistente fornisce l'informazione che ci sono delle funzioni religiose ...

📊 Parsed Response:
   predicted_label: info_cappella
   confidence: 0.98
   motivation: La conversazione riguarda la richiesta dell'utente di sapere se nel Building 8 c'è una cappella e a che orario fanno le messe il sabato e la domenica. L'assistente fornisce l'informazione che ci sono delle funzioni religiose nel Building 8, ma suggerisce di verificare direttamente in loco per gli orari specifici delle messe del sabato e della domenica.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la richiesta dell'utente di sapere se nel Building 8 c'è una cappella e a che orario fanno le messe il sabato e la domenica. L'assistente fornisce l'informazione che ci sono delle funzioni religiose nel Building 8, ma suggerisce di verificare direttamente in loco per gli orari specifici delle messe del sabato e della domenica.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 0c6071bc7202b18f1495b52f9fe10503 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info_cappella' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 363
   📊 Token totali: 811
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 811 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 363
   📊 Token conversazione finale: 363
   📊 Token totali: 811
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1144 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao il bar al Building 2 quali orari osserva [ASSISTENTE] Il bar situato al primo piano del Building 2, in fondo al corridoio centrale, è aperto tutti i giorni dalle 6:30 alle 21:00. [...] it/info/altri-servizi/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2805 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 363
   📊 Token totali stimati: 811
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao il bar al Building 2 quali orari osserva [ASSISTENTE] Il bar situato al primo piano del Building 2, in fondo al corridoio centrale, è aperto tutti i giorni dalle 6:30 alle 21:00. [...] it/info/altri-servizi/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:12.746312
====================================================================================================
📋 Session ID: classify_1756634172
⏱️  Processing Time: 2.507s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1144 chars):
   [UTENTE] Ciao il bar al Building 2 quali orari osserva [ASSISTENTE] Il bar situato al primo piano del Building 2, in fondo al corridoio centrale, è aperto tutti i giorni dalle 6:30 alle 21:00. 

Pe...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (244 chars):
   {'predicted_label': 'info\\_altri\\_servizi', 'confidence': 0.98, 'motivation': 'La conversazione riguarda l\'informazione sui bar aperti in Humanitas e i loro orari di apertura, quindi la categoria più appropriata è "info\\_altri\\_servizi".'}

📊 Parsed Response:
   predicted_label: info\_altri\_servizi
   confidence: 0.98
   motivation: La conversazione riguarda l'informazione sui bar aperti in Humanitas e i loro orari di apertura, quindi la categoria più appropriata è "info\_altri\_servizi".
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda l'informazione sui bar aperti in Humanitas e i loro orari di apertura, quindi la categoria più appropriata è "info\_altri\_servizi".
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 6ae551444563cd53ca4a04d16aaa86bf classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'info\_altri\_servizi' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 284
   📊 Token totali: 732
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 732 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 284
   📊 Token conversazione finale: 284
   📊 Token totali: 732
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 895 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Cosa copre esattamente la polizza vita Wopta?"
Output: info_condizioni_polizza
Ragionamento: Richiesta di informazioni sulle condizioni di polizza
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Divrei prenotare per nedicazione [ASSISTENTE] Potresti chiarire meglio cosa intendi per "nedicazione"? Intendi dire "medicazione" o "indicazione"? Oppure hai bisogno di prenotare una visita o un esame? [UTENTE] Medicazione per ferita che non cicatrizza [ASSISTENTE] Per prenotare una medi..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2805 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 284
   📊 Token totali stimati: 732
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Cosa copre esattamente la polizza vita Wopta?"
Output: info_condizioni_polizza
Ragionamento: Richiesta di informazioni sulle condizioni di polizza
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Divrei prenotare per nedicazione [ASSISTENTE] Potresti chiarire meglio cosa intendi per "nedicazione"? Intendi dire "medicazione" o "indicazione"? Oppure hai bisogno di prenotare una visita o un esame? [UTENTE] Medicazione per ferita che non cicatrizza [ASSISTENTE] Per prenotare una medi..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥

🔧 Creazione MongoClassificationReader per cliente: 015007d9-d413-11ef-86a5-96000228e7fe
🔍 Risoluzione tenant da UUID: 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa
✅ Tenant risolto (DB TAG locale): Humanitas (humanitas) UUID=015007d9-d413-11ef-86a5-96000228e7fe
✅ Tenant risolto da UUID: Humanitas (015007d9-d413-11ef-86a5-96000228e7fe)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
✅ MongoClassificationReader inizializzato per tenant: Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
   🏢 Database: classificazioni
✅ MongoClassificationReader creato per tenant: Humanitas (humanitas)
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
   📊 Collection: humanitas_015007d9-d413-11ef-86a5-96000228e7fe
✅ Connesso a MongoDB database: classificazioni
📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🔍 Review Queue recuperate 0 sessioni (representatives: True, propagated: True, outliers: True)
🏷️ Recupero etichette per tenant: Humanitas
📊 Calcolo statistiche per tenant: Humanitas

====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:15.496710
====================================================================================================
📋 Session ID: classify_1756634175
⏱️  Processing Time: 2.658s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (895 chars):
   [UTENTE] Divrei prenotare per nedicazione [ASSISTENTE] Potresti chiarire meglio cosa intendi per "nedicazione"? Intendi dire "medicazione" o "indicazione"? Oppure hai bisogno di prenotare una visit...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (299 chars):
   {'predicted_label': 'prenotazione', 'confidence': 0.98, 'motivation': "La conversazione riguarda la prenotazione di una medicazione per una ferita che non cicatrizza. L'utente ha chiesto il numero di prenotazione di Humanitas e l'assistente gli ha fornito le informazioni necessarie per prenotare."}

📊 Parsed Response:
   predicted_label: prenotazione
   confidence: 0.98
   motivation: La conversazione riguarda la prenotazione di una medicazione per una ferita che non cicatrizza. L'utente ha chiesto il numero di prenotazione di Humanitas e l'assistente gli ha fornito le informazioni necessarie per prenotare.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la prenotazione di una medicazione per una ferita che non cicatrizza. L'utente ha chiesto il numero di prenotazione di Humanitas e l'assistente gli ha fornito le informazioni necessarie per prenotare.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione beb94fb8c62d2db78ae8640535f1b9f8 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta urgente - valuta priorità massima

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 447
   💬 Token conversazione: 318
   📊 Token totali: 765
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 765 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 447
   📊 Token conversazione originale: 318
   📊 Token conversazione finale: 318
   📊 Token totali: 765
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1100 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao. [...] 

Se hai bisogno di ulteriore aiuto, sono qui!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2616 characters
🔢 Token Analysis:
   📊 Token prompt base: 447
   📊 Token conversazione: 318
   📊 Token totali stimati: 765
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta urgente - valuta priorità massima

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao. [...] 

Se hai bisogno di ulteriore aiuto, sono qui!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:17.870873
====================================================================================================
📋 Session ID: classify_1756634177
⏱️  Processing Time: 2.288s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1100 chars):
   [UTENTE] Ciao...non riesco a fare la registrazione  [ASSISTENTE] Per aiutarti al meglio con la registrazione, potresti dirmi se stai cercando di registrarti a [Humanitas con te](https://www.humanit...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (192 chars):
   {'predicted_label': 'registrazione', 'confidence': 0.98, 'motivation': 'La conversazione riguarda la registrazione su Humanitas con te, quindi la categoria più appropriata è "registrazione".'}

📊 Parsed Response:
   predicted_label: registrazione
   confidence: 0.98
   motivation: La conversazione riguarda la registrazione su Humanitas con te, quindi la categoria più appropriata è "registrazione".
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la registrazione su Humanitas con te, quindi la categoria più appropriata è "registrazione".
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 62f4cd292463af1c7b6c5afade544e90 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'registrazione' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Problema tecnico di accesso - priorità problema_accesso_portale su altre categorie

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 454
   💬 Token conversazione: 372
   📊 Token totali: 826
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 826 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 454
   📊 Token conversazione originale: 372
   📊 Token conversazione finale: 372
   📊 Token totali: 826
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1236 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Non riesco ad entrare nel mio account del portale Wopta"
Output: problema_accesso_portale
Ragionamento: Difficoltà di login al portale assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Mi dai l'indirizzo della sede di Wopta?"
Output: info_sede_aziendale
Ragionamento: Richiesta informazioni sulla sede aziendale


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno Giulia, sono già registrata ad Humanitas. [...] 

Se hai bisogno di ulteriore supporto, fammi sapere!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2706 characters
🔢 Token Analysis:
   📊 Token prompt base: 454
   📊 Token conversazione: 372
   📊 Token totali stimati: 826
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Problema tecnico di accesso - priorità problema_accesso_portale su altre categorie

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Non riesco ad entrare nel mio account del portale Wopta"
Output: problema_accesso_portale
Ragionamento: Difficoltà di login al portale assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Mi dai l'indirizzo della sede di Wopta?"
Output: info_sede_aziendale
Ragionamento: Richiesta informazioni sulla sede aziendale


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno Giulia, sono già registrata ad Humanitas. [...] 

Se hai bisogno di ulteriore supporto, fammi sapere!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:20.956223
====================================================================================================
📋 Session ID: classify_1756634180
⏱️  Processing Time: 2.999s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1236 chars):
   [UTENTE] Buongiorno Giulia, sono già registrata ad Humanitas.it ed ho già App, ma non riesco più af [ASSISTENTE] Sembra che tu stia riscontrando un problema con l'accesso o l'utilizzo dell'app Huma...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (375 chars):
   {'predicted_label': 'problema_accesso_app', 'confidence': 0.95, 'motivation': "L'utente ha espresso un problema con l'accesso all'app Humanitas e non riesce più ad entrare. La risposta dell'assistente fornisce una serie di suggerimenti per risolvere il problema, come controllare l'ID o richiedere...

📊 Parsed Response:
   predicted_label: problema_accesso_app
   confidence: 0.95
   motivation: L'utente ha espresso un problema con l'accesso all'app Humanitas e non riesce più ad entrare. La risposta dell'assistente fornisce una serie di suggerimenti per risolvere il problema, come controllare l'ID o richiedere il recupero del PIN o dell'ID attraverso il modulo di contatto o via email.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   L'utente ha espresso un problema con l'accesso all'app Humanitas e non riesce più ad entrare. La risposta dell'assistente fornisce una serie di suggerimenti per risolvere il problema, come controllare l'ID o richiedere il recupero del PIN o dell'ID attraverso il modulo di contatto o via email.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 2388a191d77e99a2a986d90e30fbf8dd classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'problema_accesso_app' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Problema tecnico di accesso - priorità problema_accesso_portale su altre categorie

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 454
   💬 Token conversazione: 318
   📊 Token totali: 772
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 772 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 454
   📊 Token conversazione originale: 318
   📊 Token conversazione finale: 318
   📊 Token totali: 772
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1059 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "La polizza copre anche viaggi all'estero?"
Output: info_copertura_geografica_assicurazione
Ragionamento: Richiesta informazioni sulla copertura geografica
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione


TESTO DA CLASSIFICARE:
"[UTENTE] Non riesco ad accedere per ritirare esami  [ASSISTENTE] Per aiutarti al meglio, potresti specificare se hai problemi con l'accesso a [Humanitas con te](https://www. [...]  Buona giornata!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2799 characters
🔢 Token Analysis:
   📊 Token prompt base: 454
   📊 Token conversazione: 318
   📊 Token totali stimati: 772
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Problema tecnico di accesso - priorità problema_accesso_portale su altre categorie

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "La polizza copre anche viaggi all'estero?"
Output: info_copertura_geografica_assicurazione
Ragionamento: Richiesta informazioni sulla copertura geografica
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione


TESTO DA CLASSIFICARE:
"[UTENTE] Non riesco ad accedere per ritirare esami  [ASSISTENTE] Per aiutarti al meglio, potresti specificare se hai problemi con l'accesso a [Humanitas con te](https://www. [...]  Buona giornata!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:24.317618
====================================================================================================
📋 Session ID: classify_1756634184
⏱️  Processing Time: 3.275s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1059 chars):
   [UTENTE] Non riesco ad accedere per ritirare esami  [ASSISTENTE] Per aiutarti al meglio, potresti specificare se hai problemi con l'accesso a [Humanitas con te](https://www.humanitasconte.it) o se ...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (454 chars):
   {'predicted_label': 'problema_accesso_app', 'confidence': 0.95, 'motivation': "La conversazione riguarda un problema di accesso all'applicazione Humanitas con te. L'utente ha specificato che non riesce ad accedere per ritirare esami e l'assistente gli ha chiesto se ci sono problemi con l'accesso ...

📊 Parsed Response:
   predicted_label: problema_accesso_app
   confidence: 0.95
   motivation: La conversazione riguarda un problema di accesso all'applicazione Humanitas con te. L'utente ha specificato che non riesce ad accedere per ritirare esami e l'assistente gli ha chiesto se ci sono problemi con l'accesso al sito o se il codice ID o PIN è corretto. Inoltre, l'assistente ha suggerito di contattare il Servizio di assistenza dedicata per ulteriori informazioni.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda un problema di accesso all'applicazione Humanitas con te. L'utente ha specificato che non riesce ad accedere per ritirare esami e l'assistente gli ha chiesto se ci sono problemi con l'accesso al sito o se il codice ID o PIN è corretto. Inoltre, l'assistente ha suggerito di contattare il Servizio di assistenza dedicata per ulteriori informazioni.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 46156fe842d294393fc51fd09074ddc2 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'problema_accesso_app' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 327
   📊 Token totali: 755
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 755 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 327
   📊 Token conversazione finale: 327
   📊 Token totali: 755
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1458 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] English please [ASSISTENTE] Sure! How can I assist you today? [UTENTE] Thank you! I am trying to start my log in at Humanitas Comunicazione Sicura but the system doesnt recognize my cell phone number [ASSISTENTE] If the system does not recognize your cell phone number when trying to log ..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2800 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 327
   📊 Token totali stimati: 755
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] English please [ASSISTENTE] Sure! How can I assist you today? [UTENTE] Thank you! I am trying to start my log in at Humanitas Comunicazione Sicura but the system doesnt recognize my cell phone number [ASSISTENTE] If the system does not recognize your cell phone number when trying to log ..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:27.535129
====================================================================================================
📋 Session ID: classify_1756634187
⏱️  Processing Time: 3.130s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1458 chars):
   [UTENTE] English please [ASSISTENTE] Sure! How can I assist you today? [UTENTE] Thank you! I am trying to start my log in at Humanitas Comunicazione Sicura but the system doesnt recognize my cell p...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (437 chars):
   {'predicted_label': 'problema_accesso_app', 'confidence': 0.95, 'motivation': "La conversazione riguarda un problema di accesso all'applicazione Humanitas Comunicazione Sicura, in particolare il fatto che il sistema non riconosce il numero di telefono dell'utente. Vengono fornite delle possibili ...

📊 Parsed Response:
   predicted_label: problema_accesso_app
   confidence: 0.95
   motivation: La conversazione riguarda un problema di accesso all'applicazione Humanitas Comunicazione Sicura, in particolare il fatto che il sistema non riconosce il numero di telefono dell'utente. Vengono fornite delle possibili soluzioni per risolvere il problema, come controllare se il numero è corretto e nel formato giusto, oppure contattare il team di supporto.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda un problema di accesso all'applicazione Humanitas Comunicazione Sicura, in particolare il fatto che il sistema non riconosce il numero di telefono dell'utente. Vengono fornite delle possibili soluzioni per risolvere il problema, come controllare se il numero è corretto e nel formato giusto, oppure contattare il team di supporto.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 6fbc4989d7ad0a5d53e1c250e2496273 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'problema_accesso_app' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 157
   📊 Token totali: 605
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 605 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 157
   📊 Token conversazione finale: 157
   📊 Token totali: 605
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 492 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online


TESTO DA CLASSIFICARE:
"[UTENTE] Ho bisogno di sapere gli orari di visita dell'ospedale n̈el wek and  [ASSISTENTE] Per visitare i pazienti ricoverati in Humanitas, gli orari di visita possono variare a seconda del reparto. Ti consiglio di consultare le pagine dedicate per maggiori dettagli:

- [Accesso all'Ospedale](htt..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2866 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 157
   📊 Token totali stimati: 605
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online


TESTO DA CLASSIFICARE:
"[UTENTE] Ho bisogno di sapere gli orari di visita dell'ospedale n̈el wek and  [ASSISTENTE] Per visitare i pazienti ricoverati in Humanitas, gli orari di visita possono variare a seconda del reparto. Ti consiglio di consultare le pagine dedicate per maggiori dettagli:

- [Accesso all'Ospedale](htt..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:30.032486
====================================================================================================
📋 Session ID: classify_1756634190
⏱️  Processing Time: 2.411s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (492 chars):
   [UTENTE] Ho bisogno di sapere gli orari di visita dell'ospedale n̈el wek and  [ASSISTENTE] Per visitare i pazienti ricoverati in Humanitas, gli orari di visita possono variare a seconda del reparto...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (216 chars):
   {'predicted_label': 'info\\_orari', 'confidence': 0.95, 'motivation': "La conversazione riguarda gli orari di visita dell'ospedale Humanitas e il bot ha fornito le pagine web dove trovare dettagli sui vari reparti."}

📊 Parsed Response:
   predicted_label: info\_orari
   confidence: 0.95
   motivation: La conversazione riguarda gli orari di visita dell'ospedale Humanitas e il bot ha fornito le pagine web dove trovare dettagli sui vari reparti.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda gli orari di visita dell'ospedale Humanitas e il bot ha fornito le pagine web dove trovare dettagli sui vari reparti.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione e198f2cc349c306565019cc02bbfb929 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'info\_orari' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 87
   📊 Token totali: 515
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 515 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 87
   📊 Token conversazione finale: 87
   📊 Token totali: 515
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 279 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali


TESTO DA CLASSIFICARE:
"[UTENTE] a che ore siete aperti? [ASSISTENTE] Gli orari di apertura possono variare a seconda del servizio o del reparto che desideri visitare. Potresti specificare a quale servizio o reparto ti riferisci? Ad esempio, pronto soccorso, ufficio ritiro referti, punti prelievo, ecc."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2790 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 87
   📊 Token totali stimati: 515
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali


TESTO DA CLASSIFICARE:
"[UTENTE] a che ore siete aperti? [ASSISTENTE] Gli orari di apertura possono variare a seconda del servizio o del reparto che desideri visitare. Potresti specificare a quale servizio o reparto ti riferisci? Ad esempio, pronto soccorso, ufficio ritiro referti, punti prelievo, ecc."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:32.984413
====================================================================================================
📋 Session ID: classify_1756634192
⏱️  Processing Time: 2.857s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (279 chars):
   [UTENTE] a che ore siete aperti? [ASSISTENTE] Gli orari di apertura possono variare a seconda del servizio o del reparto che desideri visitare. Potresti specificare a quale servizio o reparto ti ri...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (340 chars):
   {'predicted_label': 'info\\_orari', 'confidence': 0.95, 'motivation': "La domanda dell'utente riguarda gli orari di apertura del reparto o servizio che desidera visitare. In questo caso, l'assistente ha fornito una risposta generica suggerendo all'utente di specificare il servizio o il reparto pe...

📊 Parsed Response:
   predicted_label: info\_orari
   confidence: 0.95
   motivation: La domanda dell'utente riguarda gli orari di apertura del reparto o servizio che desidera visitare. In questo caso, l'assistente ha fornito una risposta generica suggerendo all'utente di specificare il servizio o il reparto per cui vuole sapere gli orari di apertura.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La domanda dell'utente riguarda gli orari di apertura del reparto o servizio che desidera visitare. In questo caso, l'assistente ha fornito una risposta generica suggerendo all'utente di specificare il servizio o il reparto per cui vuole sapere gli orari di apertura.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione dafaa5ccf91dc428b5a2255cbe34ea9c classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_orari' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 143
   📊 Token totali: 571
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 571 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 143
   📊 Token conversazione finale: 143
   📊 Token totali: 571
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 476 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Quanto costa la polizza vita per una persona di 35 anni?"
Output: info_costi_premio
Ragionamento: Richiesta informazioni sui costi e premi assicurativi
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao , quanto tempo passa da pre ricovero al ricovero?  [ASSISTENTE] Il tempo tra il prericovero e il ricovero dipende dalla valutazione clinica e dalla tipologia di intervento. [...] json】"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2697 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 143
   📊 Token totali stimati: 571
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Quanto costa la polizza vita per una persona di 35 anni?"
Output: info_costi_premio
Ragionamento: Richiesta informazioni sui costi e premi assicurativi
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao , quanto tempo passa da pre ricovero al ricovero?  [ASSISTENTE] Il tempo tra il prericovero e il ricovero dipende dalla valutazione clinica e dalla tipologia di intervento. [...] json】"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:35.898700
====================================================================================================
📋 Session ID: classify_1756634195
⏱️  Processing Time: 2.828s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (476 chars):
   [UTENTE] Ciao , quanto tempo passa da pre ricovero al ricovero?  [ASSISTENTE] Il tempo tra il prericovero e il ricovero dipende dalla valutazione clinica e dalla tipologia di intervento. La data de...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (351 chars):
   {'predicted_label': 'info\\_orari', 'confidence': 0.98, 'motivation': 'La risposta fornita è una informazione sui tempi di ricovero, che dipende dalla valutazione clinica e dal tipo di intervento. Inoltre viene comunicata successivamente al prericovero dalla segreteria di reparto. Questo tipo di ...

📊 Parsed Response:
   predicted_label: info\_orari
   confidence: 0.98
   motivation: La risposta fornita è una informazione sui tempi di ricovero, che dipende dalla valutazione clinica e dal tipo di intervento. Inoltre viene comunicata successivamente al prericovero dalla segreteria di reparto. Questo tipo di informazioni rientra nella categoria "info\_orari".
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La risposta fornita è una informazione sui tempi di ricovero, che dipende dalla valutazione clinica e dal tipo di intervento. Inoltre viene comunicata successivamente al prericovero dalla segreteria di reparto. Questo tipo di informazioni rientra nella categoria "info\_orari".
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 240e1d59617853447390d1570a04c1f1 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_orari' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 188
   📊 Token totali: 636
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 636 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 188
   📊 Token conversazione finale: 188
   📊 Token totali: 636
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 663 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] La struttura è convenzionata ma alcuni medici non lo sono Unisalute [ASSISTENTE] Se ti riferisci alla possibilità di prenotare visite o esami con Unisalute, è importante sapere che alcune prestazioni potrebbero essere coperte dalla convenzione, mentre altre no. Inoltre, non tutti i medic..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2848 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 188
   📊 Token totali stimati: 636
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] La struttura è convenzionata ma alcuni medici non lo sono Unisalute [ASSISTENTE] Se ti riferisci alla possibilità di prenotare visite o esami con Unisalute, è importante sapere che alcune prestazioni potrebbero essere coperte dalla convenzione, mentre altre no. Inoltre, non tutti i medic..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:38.328843
====================================================================================================
📋 Session ID: classify_1756634198
⏱️  Processing Time: 2.343s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (663 chars):
   [UTENTE] La struttura è convenzionata ma alcuni medici non lo sono Unisalute [ASSISTENTE] Se ti riferisci alla possibilità di prenotare visite o esami con Unisalute, è importante sapere che alcune ...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (210 chars):
   {'predicted_label': 'info\\_strutture\\_convenzionate', 'confidence': 0.95, 'motivation': 'La conversazione riguarda la convenzione con Unisalute e le prestazioni che possono essere coperte dalla convenzione.'}

📊 Parsed Response:
   predicted_label: info\_strutture\_convenzionate
   confidence: 0.95
   motivation: La conversazione riguarda la convenzione con Unisalute e le prestazioni che possono essere coperte dalla convenzione.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la convenzione con Unisalute e le prestazioni che possono essere coperte dalla convenzione.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione a66c235258b634ba0163f9b29b6079e5 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'info\_strutture\_convenzionate' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 180
   📊 Token totali: 628
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 628 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 180
   📊 Token conversazione finale: 180
   📊 Token totali: 628
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 551 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Dove trovare informazioni per la preparazione di un ecoendoscopia pancreas [ASSISTENTE] Puoi trovare le norme di preparazione per l'ecoendoscopia del pancreas al seguente [link](https://www. [...]  😊"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2780 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 180
   📊 Token totali stimati: 628
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Dove trovare informazioni per la preparazione di un ecoendoscopia pancreas [ASSISTENTE] Puoi trovare le norme di preparazione per l'ecoendoscopia del pancreas al seguente [link](https://www. [...]  😊"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:40.936783
====================================================================================================
📋 Session ID: classify_1756634200
⏱️  Processing Time: 2.515s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (551 chars):
   [UTENTE] Dove trovare informazioni per la preparazione di un ecoendoscopia pancreas [ASSISTENTE] Puoi trovare le norme di preparazione per l'ecoendoscopia del pancreas al seguente [link](https://ww...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (260 chars):
   {'predicted_label': 'info\\_preparazione\\_esame', 'confidence': 1.0, 'motivation': 'La conversazione riguarda la richiesta di informazioni sulla preparazione per un ecoendoscopia pancreas, quindi la categoria più appropriata è "info\\_preparazione\\_esame".'}

📊 Parsed Response:
   predicted_label: info\_preparazione\_esame
   confidence: 1.0
   motivation: La conversazione riguarda la richiesta di informazioni sulla preparazione per un ecoendoscopia pancreas, quindi la categoria più appropriata è "info\_preparazione\_esame".
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la richiesta di informazioni sulla preparazione per un ecoendoscopia pancreas, quindi la categoria più appropriata è "info\_preparazione\_esame".
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione c9f298679a2a8376f2326b8f82a3c11c classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'info\_preparazione\_esame' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 180
   📊 Token totali: 628
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 628 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 180
   📊 Token conversazione finale: 180
   📊 Token totali: 628
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 604 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Cosa copre esattamente la polizza vita Wopta?"
Output: info_condizioni_polizza
Ragionamento: Richiesta di informazioni sulle condizioni di polizza
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanto costa la polizza vita per una persona di 35 anni?"
Output: info_costi_premio
Ragionamento: Richiesta informazioni sui costi e premi assicurativi
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Volevo sapere se ci sono delle indicazioni da seguire dopo aver effettuato una PET globale corporea con Gallio [ASSISTENTE] Dopo aver effettuato una PET globale corporea con Gallio, è importante evitare stretto contatto con donne in gravidanza, in età fertile o con minorenni per motivi d..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2851 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 180
   📊 Token totali stimati: 628
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Cosa copre esattamente la polizza vita Wopta?"
Output: info_condizioni_polizza
Ragionamento: Richiesta di informazioni sulle condizioni di polizza
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanto costa la polizza vita per una persona di 35 anni?"
Output: info_costi_premio
Ragionamento: Richiesta informazioni sui costi e premi assicurativi
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Volevo sapere se ci sono delle indicazioni da seguire dopo aver effettuato una PET globale corporea con Gallio [ASSISTENTE] Dopo aver effettuato una PET globale corporea con Gallio, è importante evitare stretto contatto con donne in gravidanza, in età fertile o con minorenni per motivi d..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:43.702226
====================================================================================================
📋 Session ID: classify_1756634203
⏱️  Processing Time: 2.673s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (604 chars):
   [UTENTE] Volevo sapere se ci sono delle indicazioni da seguire dopo aver effettuato una PET globale corporea con Gallio [ASSISTENTE] Dopo aver effettuato una PET globale corporea con Gallio, è impo...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (293 chars):
   {'predicted_label': 'info\\_esame', 'confidence': 0.98, 'motivation': "La conversazione riguarda le indicazioni da seguire dopo aver effettuato una PET globale corporea con Gallio. In particolare, vengono fornite informazioni sulla radioprotezione e sull'utilizzo di ansiolitici per l'esame."}

📊 Parsed Response:
   predicted_label: info\_esame
   confidence: 0.98
   motivation: La conversazione riguarda le indicazioni da seguire dopo aver effettuato una PET globale corporea con Gallio. In particolare, vengono fornite informazioni sulla radioprotezione e sull'utilizzo di ansiolitici per l'esame.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda le indicazioni da seguire dopo aver effettuato una PET globale corporea con Gallio. In particolare, vengono fornite informazioni sulla radioprotezione e sull'utilizzo di ansiolitici per l'esame.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione a10fade304c4f6bcbc919d953256b260 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'info\_esame' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 94
   📊 Token totali: 522
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 522 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 94
   📊 Token conversazione finale: 94
   📊 Token totali: 522
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 321 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto


TESTO DA CLASSIFICARE:
"[UTENTE] Preparazione per coronografia  [ASSISTENTE] Per la preparazione alla coronarografia, è necessario eseguire l'esame a digiuno e viene effettuato in regime di ricovero. [...] it/visite-ed-esami/coronarografia)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2725 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 94
   📊 Token totali stimati: 522
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto


TESTO DA CLASSIFICARE:
"[UTENTE] Preparazione per coronografia  [ASSISTENTE] Per la preparazione alla coronarografia, è necessario eseguire l'esame a digiuno e viene effettuato in regime di ricovero. [...] it/visite-ed-esami/coronarografia)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:45.977755
====================================================================================================
📋 Session ID: classify_1756634205
⏱️  Processing Time: 2.181s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (321 chars):
   [UTENTE] Preparazione per coronografia  [ASSISTENTE] Per la preparazione alla coronarografia, è necessario eseguire l'esame a digiuno e viene effettuato in regime di ricovero. Per ulteriori dettagl...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (169 chars):
   {'predicted_label': 'info\\_esame', 'confidence': 1.0, 'motivation': 'La conversazione riguarda la preparazione per un esame medico, in questo caso una coronarografia.'}

📊 Parsed Response:
   predicted_label: info\_esame
   confidence: 1.0
   motivation: La conversazione riguarda la preparazione per un esame medico, in questo caso una coronarografia.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la preparazione per un esame medico, in questo caso una coronarografia.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione cd910ccc3d86182b0cb6489e03a3f7ff classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_esame' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 196
   📊 Token totali: 645
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 645 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 196
   📊 Token conversazione finale: 196
   📊 Token totali: 645
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 618 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Cosa copre esattamente la polizza vita Wopta?"
Output: info_condizioni_polizza
Ragionamento: Richiesta di informazioni sulle condizioni di polizza
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] ciao, cosa devo fare per questo esame che faro domani pomeriggio alla Gavazzeni ,tc coronarica e tc di perfusione miocardica [ASSISTENTE] Per la preparazione alla tomografia computerizzata con mezzo di contrasto e studio per perfusione coronarica con stress farmacologico (adenosina o reg..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2835 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 196
   📊 Token totali stimati: 645
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Cosa copre esattamente la polizza vita Wopta?"
Output: info_condizioni_polizza
Ragionamento: Richiesta di informazioni sulle condizioni di polizza
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] ciao, cosa devo fare per questo esame che faro domani pomeriggio alla Gavazzeni ,tc coronarica e tc di perfusione miocardica [ASSISTENTE] Per la preparazione alla tomografia computerizzata con mezzo di contrasto e studio per perfusione coronarica con stress farmacologico (adenosina o reg..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:49.533345
====================================================================================================
📋 Session ID: classify_1756634209
⏱️  Processing Time: 3.469s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (618 chars):
   [UTENTE] ciao, cosa devo fare per questo esame che faro domani pomeriggio alla Gavazzeni ,tc coronarica e tc di perfusione miocardica [ASSISTENTE] Per la preparazione alla tomografia computerizzata...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (429 chars):
   {'predicted_label': 'info\\_esame', 'confidence': 1.0, 'motivation': "La conversazione riguarda l'esame che l'utente dovrà fare domani pomeriggio alla Gavazzeni, precisamente una TC coronarica e una TC di perfusione miocardica. L'assistente ha fornito le norme di preparazione per questi esami al ...

📊 Parsed Response:
   predicted_label: info\_esame
   confidence: 1.0
   motivation: La conversazione riguarda l'esame che l'utente dovrà fare domani pomeriggio alla Gavazzeni, precisamente una TC coronarica e una TC di perfusione miocardica. L'assistente ha fornito le norme di preparazione per questi esami al seguente link: [link](https://www.humanitas.it/wp-content/uploads/2022/07/norme-preparazione-NP205-PKPERF-TC-cuore-perfusione.pdf)
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda l'esame che l'utente dovrà fare domani pomeriggio alla Gavazzeni, precisamente una TC coronarica e una TC di perfusione miocardica. L'assistente ha fornito le norme di preparazione per questi esami al seguente link: [link](https://www.humanitas.it/wp-content/uploads/2022/07/norme-preparazione-NP205-PKPERF-TC-cuore-perfusione.pdf)
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione d778296da4685eceb0fd99c0414b7259 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_esame' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 708
   📊 Token totali: 1156
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 1156 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 708
   📊 Token conversazione finale: 708
   📊 Token totali: 1156
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 2173 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione


TESTO DA CLASSIFICARE:
"[UTENTE] devo fare la colonscopia mi dici come mi devo preparare ? hai le norme ? [ASSISTENTE] Certamente! Puoi trovare le norme di preparazione alla colonscopia a questo [link](https://www. [...] it)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2761 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 708
   📊 Token totali stimati: 1156
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione


TESTO DA CLASSIFICARE:
"[UTENTE] devo fare la colonscopia mi dici come mi devo preparare ? hai le norme ? [ASSISTENTE] Certamente! Puoi trovare le norme di preparazione alla colonscopia a questo [link](https://www. [...] it)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:52.382888
====================================================================================================
📋 Session ID: classify_1756634212
⏱️  Processing Time: 2.762s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (2173 chars):
   [UTENTE] devo fare la colonscopia mi dici come mi devo preparare ? hai le norme ? [ASSISTENTE] Certamente! Puoi trovare le norme di preparazione alla colonscopia a questo [link](https://www.humanit...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (308 chars):
   {'predicted_label': 'info\\_alopecia', 'confidence': 0.98, 'motivation': "La conversazione riguarda l'alopecia, una condizione caratterizzata dalla perdita di capelli o peli in diverse aree del corpo. L'utente ha chiesto cosa sia l'alopecia e l'assistente ha fornito una breve spiegazione della co...

📊 Parsed Response:
   predicted_label: info\_alopecia
   confidence: 0.98
   motivation: La conversazione riguarda l'alopecia, una condizione caratterizzata dalla perdita di capelli o peli in diverse aree del corpo. L'utente ha chiesto cosa sia l'alopecia e l'assistente ha fornito una breve spiegazione della condizione.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda l'alopecia, una condizione caratterizzata dalla perdita di capelli o peli in diverse aree del corpo. L'utente ha chiesto cosa sia l'alopecia e l'assistente ha fornito una breve spiegazione della condizione.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 8749e7661214b9a58fecd8f0d6d9eed9 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'info\_alopecia' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 381
   📊 Token totali: 830
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 830 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 381
   📊 Token conversazione finale: 381
   📊 Token totali: 830
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1128 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Vorrei prenotare una visita urologica [ASSISTENTE] Per prenotare una visita urologica presso l'Istituto Clinico Humanitas, puoi utilizzare i seguenti canali di prenotazione:

1. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2788 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 381
   📊 Token totali stimati: 830
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Vorrei prenotare una visita urologica [ASSISTENTE] Per prenotare una visita urologica presso l'Istituto Clinico Humanitas, puoi utilizzare i seguenti canali di prenotazione:

1. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:55.064072
====================================================================================================
📋 Session ID: classify_1756634215
⏱️  Processing Time: 2.587s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1128 chars):
   [UTENTE] Vorrei prenotare una visita urologica [ASSISTENTE] Per prenotare una visita urologica presso l'Istituto Clinico Humanitas, puoi utilizzare i seguenti canali di prenotazione:

1. **Privatam...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (263 chars):
   {'predicted_label': 'prenotazione_visita_urologica', 'confidence': 1.0, 'motivation': 'La conversazione riguarda la prenotazione di una visita urologica presso l\'Istituto Clinico Humanitas, quindi la categoria più appropriata è "prenotazione_visita_urologica".'}

📊 Parsed Response:
   predicted_label: prenotazione_visita_urologica
   confidence: 1.0
   motivation: La conversazione riguarda la prenotazione di una visita urologica presso l'Istituto Clinico Humanitas, quindi la categoria più appropriata è "prenotazione_visita_urologica".
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la prenotazione di una visita urologica presso l'Istituto Clinico Humanitas, quindi la categoria più appropriata è "prenotazione_visita_urologica".
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione e1506f6d890578d819094e8ec1463bb4 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'prenotazione_visita_urologica' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 319
   📊 Token totali: 747
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 747 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 319
   📊 Token conversazione finale: 319
   📊 Token totali: 747
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1078 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao  [ASSISTENTE] Ciao! Come posso esserti utile? 😊 [UTENTE] Si  [ASSISTENTE] Perfetto! Dimmi pure, come posso aiutarti? 😊 [UTENTE] ho prenotato per il 15 settembre con il Dr. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2683 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 319
   📊 Token totali stimati: 747
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao  [ASSISTENTE] Ciao! Come posso esserti utile? 😊 [UTENTE] Si  [ASSISTENTE] Perfetto! Dimmi pure, come posso aiutarti? 😊 [UTENTE] ho prenotato per il 15 settembre con il Dr. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:56:57.923329
====================================================================================================
📋 Session ID: classify_1756634217
⏱️  Processing Time: 2.763s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1078 chars):
   [UTENTE] Ciao  [ASSISTENTE] Ciao! Come posso esserti utile? 😊 [UTENTE] Si  [ASSISTENTE] Perfetto! Dimmi pure, come posso aiutarti? 😊 [UTENTE] ho prenotato per il 15 settembre con il Dr. Lamberto Zo...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (341 chars):
   {'predicted_label': 'prenotazione_visita', 'confidence': 0.98, 'motivation': 'La conversazione riguarda una prenotazione per un esame medico, in questo caso "Mapping Nevi Computerizzato – Dermatologia". L\'utente ha chiesto conferma sull\'utilizzo del sistema FotoFinder e sulla disponibilità dell...

📊 Parsed Response:
   predicted_label: prenotazione_visita
   confidence: 0.98
   motivation: La conversazione riguarda una prenotazione per un esame medico, in questo caso "Mapping Nevi Computerizzato – Dermatologia". L'utente ha chiesto conferma sull'utilizzo del sistema FotoFinder e sulla disponibilità delle immagini in formato digitale o cartaceo.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda una prenotazione per un esame medico, in questo caso "Mapping Nevi Computerizzato – Dermatologia". L'utente ha chiesto conferma sull'utilizzo del sistema FotoFinder e sulla disponibilità delle immagini in formato digitale o cartaceo.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione f664b65de9fca671efb552caaba657b8 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione_visita' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 195
   📊 Token totali: 623
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 623 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 195
   📊 Token conversazione finale: 195
   📊 Token totali: 623
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 661 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato


TESTO DA CLASSIFICARE:
"[UTENTE] Dovrei effettuare una enteroscopia con biopsia Humatis effettua questo tipo di prestazione  e il costo in regime privato [ASSISTENTE] Humanitas effettua l'enteroscopia con biopsia, una procedura che consente di esaminare il piccolo intestino e prelevare campioni di tessuto per analisi is..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2779 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 195
   📊 Token totali stimati: 623
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato


TESTO DA CLASSIFICARE:
"[UTENTE] Dovrei effettuare una enteroscopia con biopsia Humatis effettua questo tipo di prestazione  e il costo in regime privato [ASSISTENTE] Humanitas effettua l'enteroscopia con biopsia, una procedura che consente di esaminare il piccolo intestino e prelevare campioni di tessuto per analisi is..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:00.275805
====================================================================================================
📋 Session ID: classify_1756634220
⏱️  Processing Time: 2.264s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (661 chars):
   [UTENTE] Dovrei effettuare una enteroscopia con biopsia Humatis effettua questo tipo di prestazione  e il costo in regime privato [ASSISTENTE] Humanitas effettua l'enteroscopia con biopsia, una pro...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (171 chars):
   {'predicted_label': 'info\\_esame', 'confidence': 1.0, 'motivation': "La conversazione riguarda una procedura medica, l'enteroscopia con biopsia, che è un tipo di esame."}

📊 Parsed Response:
   predicted_label: info\_esame
   confidence: 1.0
   motivation: La conversazione riguarda una procedura medica, l'enteroscopia con biopsia, che è un tipo di esame.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda una procedura medica, l'enteroscopia con biopsia, che è un tipo di esame.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione dcf83c09a3dbd5a9c9cc927493b1a133 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_esame' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 407
   📊 Token totali: 856
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 856 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 407
   📊 Token conversazione finale: 407
   📊 Token totali: 856
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1204 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno, sono Fava Piera (05/07/48) paziente del cardiologo dr Carlo Ceriotti che mi ha visitata ila Rozzano il 25/06/25 prescrivendo ECOCARDIO di controllo da fare entro 6 mesi x importante patologia. [...] 

Se hai bisogno di ulteriore assistenza, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2851 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 407
   📊 Token totali stimati: 856
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno, sono Fava Piera (05/07/48) paziente del cardiologo dr Carlo Ceriotti che mi ha visitata ila Rozzano il 25/06/25 prescrivendo ECOCARDIO di controllo da fare entro 6 mesi x importante patologia. [...] 

Se hai bisogno di ulteriore assistenza, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:02.943597
====================================================================================================
📋 Session ID: classify_1756634222
⏱️  Processing Time: 2.579s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1204 chars):
   [UTENTE] Buongiorno, sono Fava Piera (05/07/48) paziente del cardiologo dr Carlo Ceriotti che mi ha visitata ila Rozzano il 25/06/25 prescrivendo ECOCARDIO di controllo da fare entro 6 mesi x impor...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (271 chars):
   {'predicted_label': 'prenotazione_esame', 'confidence': 0.95, 'motivation': 'La conversazione riguarda la prenotazione di un esame medico (ecocardiogramma) e fornisce informazioni su come prenotarlo sia privatamente che attraverso il Servizio Sanitario Nazionale (SSN).'}

📊 Parsed Response:
   predicted_label: prenotazione_esame
   confidence: 0.95
   motivation: La conversazione riguarda la prenotazione di un esame medico (ecocardiogramma) e fornisce informazioni su come prenotarlo sia privatamente che attraverso il Servizio Sanitario Nazionale (SSN).
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la prenotazione di un esame medico (ecocardiogramma) e fornisce informazioni su come prenotarlo sia privatamente che attraverso il Servizio Sanitario Nazionale (SSN).
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione e523a8cf7ddbebc225ce0be4027e44d5 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione_esame' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 406
   📊 Token totali: 855
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 855 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 406
   📊 Token conversazione finale: 406
   📊 Token totali: 855
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1266 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao Giulia Ascolta c'è mia mamma che avrebbe bisogno di fare radioterapia adesso si trova il Vito Fazzi di Lecce i tempi di attesa sono piuttosto lunghi prima del 20 di agosto nulla Mi chiedevo se eventualmente nella vostra struttura i tempi di attesa son [ASSISTENTE] Per conoscere i te..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2807 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 406
   📊 Token totali stimati: 855
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao Giulia Ascolta c'è mia mamma che avrebbe bisogno di fare radioterapia adesso si trova il Vito Fazzi di Lecce i tempi di attesa sono piuttosto lunghi prima del 20 di agosto nulla Mi chiedevo se eventualmente nella vostra struttura i tempi di attesa son [ASSISTENTE] Per conoscere i te..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:06.272321
====================================================================================================
📋 Session ID: classify_1756634226
⏱️  Processing Time: 3.242s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1266 chars):
   [UTENTE] Ciao Giulia Ascolta c'è mia mamma che avrebbe bisogno di fare radioterapia adesso si trova il Vito Fazzi di Lecce i tempi di attesa sono piuttosto lunghi prima del 20 di agosto nulla Mi ch...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (481 chars):
   {'predicted_label': 'prenotazione', 'confidence': 0.95, 'motivation': 'La conversazione riguarda la prenotazione per una radioterapia presso Humanitas. Il utente chiede informazioni sui tempi di attesa e viene fornito un elenco dei canali di prenotazione disponibili, sia per coloro che hanno fond...

📊 Parsed Response:
   predicted_label: prenotazione
   confidence: 0.95
   motivation: La conversazione riguarda la prenotazione per una radioterapia presso Humanitas. Il utente chiede informazioni sui tempi di attesa e viene fornito un elenco dei canali di prenotazione disponibili, sia per coloro che hanno fondi e assicurazioni private che quelli che utilizzano il Servizio Sanitario Nazionale (SSN). Vengono inoltre fornite informazioni su come contattare Humanitas online o telefonicamente.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la prenotazione per una radioterapia presso Humanitas. Il utente chiede informazioni sui tempi di attesa e viene fornito un elenco dei canali di prenotazione disponibili, sia per coloro che hanno fondi e assicurazioni private che quelli che utilizzano il Servizio Sanitario Nazionale (SSN). Vengono inoltre fornite informazioni su come contattare Humanitas online o telef...
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 08729e0e748ce887ec3ae227a447aab8 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 247
   📊 Token totali: 695
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 695 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 247
   📊 Token conversazione finale: 247
   📊 Token totali: 695
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 844 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Non riesco ad entrare nel mio account del portale Wopta"
Output: problema_accesso_portale
Ragionamento: Difficoltà di login al portale assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste


TESTO DA CLASSIFICARE:
"[UTENTE] Ritiro referti  [ASSISTENTE] Puoi dirmi di quale tipo di referto hai bisogno? Ad esempio, se si tratta di un test HIV, esami istologici, citologici, tamponi, esami genetici o altro. [...]  

Se hai bisogno di ulteriori informazioni, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2839 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 247
   📊 Token totali stimati: 695
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Non riesco ad entrare nel mio account del portale Wopta"
Output: problema_accesso_portale
Ragionamento: Difficoltà di login al portale assicurazione
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste


TESTO DA CLASSIFICARE:
"[UTENTE] Ritiro referti  [ASSISTENTE] Puoi dirmi di quale tipo di referto hai bisogno? Ad esempio, se si tratta di un test HIV, esami istologici, citologici, tamponi, esami genetici o altro. [...]  

Se hai bisogno di ulteriori informazioni, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:09.341216
====================================================================================================
📋 Session ID: classify_1756634229
⏱️  Processing Time: 2.979s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (844 chars):
   [UTENTE] Ritiro referti  [ASSISTENTE] Puoi dirmi di quale tipo di referto hai bisogno? Ad esempio, se si tratta di un test HIV, esami istologici, citologici, tamponi, esami genetici o altro. Alcuni...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (393 chars):
   {'predicted_label': 'ritiro referti', 'confidence': 0.98, 'motivation': "La conversazione riguarda il ritiro di un referto medico e l'assistente fornisce informazioni su come accedere al portale online per consultare i referti, come registrarsi e inserire l'ID fornito all'accettazione. Inoltre, v...

📊 Parsed Response:
   predicted_label: ritiro referti
   confidence: 0.98
   motivation: La conversazione riguarda il ritiro di un referto medico e l'assistente fornisce informazioni su come accedere al portale online per consultare i referti, come registrarsi e inserire l'ID fornito all'accettazione. Inoltre, viene suggerito di contattare il servizio dedicato se si ha problemi con il ritiro del referto.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda il ritiro di un referto medico e l'assistente fornisce informazioni su come accedere al portale online per consultare i referti, come registrarsi e inserire l'ID fornito all'accettazione. Inoltre, viene suggerito di contattare il servizio dedicato se si ha problemi con il ritiro del referto.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione d5620900ba031583ff188c164c4e3af0 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'ritiro referti' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 363
   📊 Token totali: 811
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 811 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 363
   📊 Token conversazione finale: 363
   📊 Token totali: 811
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1340 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno, in data 28 maggio ho effettuato la richiesta della consegna delle immagini delle tac e delle risonanza magnetiche, effettuate a mio marito Vincenzo Rubino, tramite chiavetta usb e consegna con corriere. [...] 

Se hai bisogno di ulteriore supporto, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2861 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 363
   📊 Token totali stimati: 811
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno, in data 28 maggio ho effettuato la richiesta della consegna delle immagini delle tac e delle risonanza magnetiche, effettuate a mio marito Vincenzo Rubino, tramite chiavetta usb e consegna con corriere. [...] 

Se hai bisogno di ulteriore supporto, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:12.624977
====================================================================================================
📋 Session ID: classify_1756634232
⏱️  Processing Time: 3.189s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1340 chars):
   [UTENTE] Buongiorno, in data 28 maggio ho effettuato la richiesta della consegna delle immagini delle tac e delle risonanza magnetiche, effettuate a mio marito Vincenzo Rubino, tramite chiavetta us...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (463 chars):
   {'predicted_label': 'problema_accesso_referti', 'confidence': 1.0, 'motivation': 'La conversazione riguarda un problema di accesso alle immagini delle tac e delle risonanze magnetiche richieste tramite chiavetta USB e consegna con corriere. Il richiedente ha segnalato che la richiesta è ancora ne...

📊 Parsed Response:
   predicted_label: problema_accesso_referti
   confidence: 1.0
   motivation: La conversazione riguarda un problema di accesso alle immagini delle tac e delle risonanze magnetiche richieste tramite chiavetta USB e consegna con corriere. Il richiedente ha segnalato che la richiesta è ancora nello stato "processing" e chiede informazioni sulla tempistica, sul metodo di pagamento del corriere e su come contattare l'assistenza per avere ulteriori dettagli.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda un problema di accesso alle immagini delle tac e delle risonanze magnetiche richieste tramite chiavetta USB e consegna con corriere. Il richiedente ha segnalato che la richiesta è ancora nello stato "processing" e chiede informazioni sulla tempistica, sul metodo di pagamento del corriere e su come contattare l'assistenza per avere ulteriori dettagli.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 10eb207864785b90b8db2e62c14528a2 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'problema_accesso_referti' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 428
   💬 Token conversazione: 144
   📊 Token totali: 572
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 572 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 428
   📊 Token conversazione originale: 144
   📊 Token conversazione finale: 144
   📊 Token totali: 572
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 441 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Ɓuongiorno,l'accettazione per ritiro CD rx fino a che ora è aperto? [ASSISTENTE] L'accettazione per il ritiro dei CD RX è aperta dal lunedì al venerdì dalle 10:00 alle 18:00 e il sabato dalle 9:00 alle 13:00【6:0†scraped_https___www. [...] it/info/referti-cartelle-cliniche/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2783 characters
🔢 Token Analysis:
   📊 Token prompt base: 428
   📊 Token conversazione: 144
   📊 Token totali stimati: 572
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica




OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Ɓuongiorno,l'accettazione per ritiro CD rx fino a che ora è aperto? [ASSISTENTE] L'accettazione per il ritiro dei CD RX è aperta dal lunedì al venerdì dalle 10:00 alle 18:00 e il sabato dalle 9:00 alle 13:00【6:0†scraped_https___www. [...] it/info/referti-cartelle-cliniche/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:14.928984
====================================================================================================
📋 Session ID: classify_1756634234
⏱️  Processing Time: 2.217s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (441 chars):
   [UTENTE] Ɓuongiorno,l'accettazione per ritiro CD rx fino a che ora è aperto? [ASSISTENTE] L'accettazione per il ritiro dei CD RX è aperta dal lunedì al venerdì dalle 10:00 alle 18:00 e il sabato da...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [73 more lines] ...
     Line 77: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (164 chars):
   {'predicted_label': 'info\\_orari', 'confidence': 1.0, 'motivation': "La conversazione riguarda l'orario di accettazione per il ritiro dei CD RX presso Humanitas."}

📊 Parsed Response:
   predicted_label: info\_orari
   confidence: 1.0
   motivation: La conversazione riguarda l'orario di accettazione per il ritiro dei CD RX presso Humanitas.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda l'orario di accettazione per il ritiro dei CD RX presso Humanitas.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione ea55736eaf7e991c371cb4ce91da0123 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_orari' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 877
   📊 Token totali: 1325
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 1325 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 877
   📊 Token conversazione finale: 877
   📊 Token totali: 1325
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 2780 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno

vorrei maggiori informazioni riguardo delle analisi fecali. [...]  Se hai bisogno di altro, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2687 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 877
   📊 Token totali stimati: 1325
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto


TESTO DA CLASSIFICARE:
"[UTENTE] Buongiorno

vorrei maggiori informazioni riguardo delle analisi fecali. [...]  Se hai bisogno di altro, sono qui per aiutarti!"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:20.156782
====================================================================================================
📋 Session ID: classify_1756634240
⏱️  Processing Time: 5.142s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (2780 chars):
   [UTENTE] Buongiorno

vorrei maggiori informazioni riguardo delle analisi fecali.

In particolare, vorrei sapere se fate le seguenti analisi:
- Test metagenomico per lo studio funzionale
- Sequenzia...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [76 more lines] ...
     Line 80: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (314 chars):
   {'predicted_label': 'prenotazione_analisi', 'confidence': 1.0, 'motivation': "La conversazione riguarda la richiesta di informazioni su una serie di analisi fecali e sulle modalità per contattare il centro delle analisi di Humanitas. In particolare, l'utente chiede se è possibile effettuare le se...

📊 Parsed Response:
   predicted_label: prenotazione_analisi
   confidence: 1.0
   motivation: La conversazione riguarda la richiesta di informazioni su una serie di analisi fecali e sulle modalità per contattare il centro delle analisi di Humanitas. In particolare, l'utente chiede se è possibile effettuare le seguenti analisi:
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la richiesta di informazioni su una serie di analisi fecali e sulle modalità per contattare il centro delle analisi di Humanitas. In particolare, l'utente chiede se è possibile effettuare le seguenti analisi:
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 6bf00dffc187f4c9c2835e087b79d951 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione_analisi' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 440
   📊 Token totali: 888
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 888 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 440
   📊 Token conversazione finale: 440
   📊 Token totali: 888
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1584 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanto costa la polizza vita per una persona di 35 anni?"
Output: info_costi_premio
Ragionamento: Richiesta informazioni sui costi e premi assicurativi
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao, mi chiamo Ditjon, sonno dal Albania, ho un problema che dopo gli esami che ho fatto mi hanno detto hai, prostatite chrono non bacteriale, penso che le cause, perche non ho nessune bacterie in urina, in spermocultura, in af genital, e in swab test,le cause sonno, per prima Ibs soffr..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2868 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 440
   📊 Token totali stimati: 888
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Posso modificare l'importo assicurato dopo la sottoscrizione?"
Output: modifica_condizioni_polizza
Ragionamento: Richiesta di modifica delle condizioni contrattuali
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanto costa la polizza vita per una persona di 35 anni?"
Output: info_costi_premio
Ragionamento: Richiesta informazioni sui costi e premi assicurativi
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Ciao, mi chiamo Ditjon, sonno dal Albania, ho un problema che dopo gli esami che ho fatto mi hanno detto hai, prostatite chrono non bacteriale, penso che le cause, perche non ho nessune bacterie in urina, in spermocultura, in af genital, e in swab test,le cause sonno, per prima Ibs soffr..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:22.661608
====================================================================================================
📋 Session ID: classify_1756634242
⏱️  Processing Time: 2.418s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1584 chars):
   [UTENTE] Ciao, mi chiamo Ditjon, sonno dal Albania, ho un problema che dopo gli esami che ho fatto mi hanno detto hai, prostatite chrono non bacteriale, penso che le cause, perche non ho nessune ba...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (220 chars):
   {'predicted_label': 'prenotazione_visita', 'confidence': 0.95, 'motivation': "La conversazione riguarda la richiesta di un appuntamento con un medico specializzato in dolore pelvico cronico presso l'ospedale Humanitas."}

📊 Parsed Response:
   predicted_label: prenotazione_visita
   confidence: 0.95
   motivation: La conversazione riguarda la richiesta di un appuntamento con un medico specializzato in dolore pelvico cronico presso l'ospedale Humanitas.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.950
   [███████████████████░] 95.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la richiesta di un appuntamento con un medico specializzato in dolore pelvico cronico presso l'ospedale Humanitas.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione b5cfdceb2898ec4edb922f7fb13ccce7 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione_visita' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 513
   📊 Token totali: 961
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 961 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 513
   📊 Token conversazione finale: 513
   📊 Token totali: 961
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1694 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "La polizza copre anche viaggi all'estero?"
Output: info_copertura_geografica_assicurazione
Ragionamento: Richiesta informazioni sulla copertura geografica
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Devo fare prelievo di sangue presso Humanitas Via Sardegna. [...] it/info/esami-di-laboratorio/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2647 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 513
   📊 Token totali stimati: 961
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "La polizza copre anche viaggi all'estero?"
Output: info_copertura_geografica_assicurazione
Ragionamento: Richiesta informazioni sulla copertura geografica
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita


TESTO DA CLASSIFICARE:
"[UTENTE] Devo fare prelievo di sangue presso Humanitas Via Sardegna. [...] it/info/esami-di-laboratorio/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:25.610002
====================================================================================================
📋 Session ID: classify_1756634245
⏱️  Processing Time: 2.861s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1694 chars):
   [UTENTE] Devo fare prelievo di sangue presso Humanitas Via Sardegna. Sono incinta, devo prenotare? [ASSISTENTE] Sì, è necessario prenotare per effettuare un prelievo di sangue presso Humanitas. Puo...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (360 chars):
   {'predicted_label': 'prenotazione_prelievi', 'confidence': 0.98, 'motivation': 'La conversazione riguarda la necessità di prenotare un prelievo di sangue presso Humanitas, e vengono forniti i canali per effettuare la prenotazione (online o telefono). Inoltre viene precisato che le donne in gravid...

📊 Parsed Response:
   predicted_label: prenotazione_prelievi
   confidence: 0.98
   motivation: La conversazione riguarda la necessità di prenotare un prelievo di sangue presso Humanitas, e vengono forniti i canali per effettuare la prenotazione (online o telefono). Inoltre viene precisato che le donne in gravidanza hanno precedenza presso il Medical Center di Fiordaliso.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la necessità di prenotare un prelievo di sangue presso Humanitas, e vengono forniti i canali per effettuare la prenotazione (online o telefono). Inoltre viene precisato che le donne in gravidanza hanno precedenza presso il Medical Center di Fiordaliso.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 69ce375d640dea3f8f7818889d0b9027 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'prenotazione_prelievi' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 186
   📊 Token totali: 635
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 635 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 186
   📊 Token conversazione finale: 186
   📊 Token totali: 635
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 567 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Il punto prelievi di viale sardegna è aperto in estate?  [ASSISTENTE] Il punto prelievi di Via Sardegna 5, Fizzonasco di Pieve Emanuele, è aperto durante l'estate con i seguenti orari: da lunedì a venerdì dalle 7:00 alle 13:00. [...] it/info/esami-di-laboratorio/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2846 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 186
   📊 Token totali stimati: 635
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] Il punto prelievi di viale sardegna è aperto in estate?  [ASSISTENTE] Il punto prelievi di Via Sardegna 5, Fizzonasco di Pieve Emanuele, è aperto durante l'estate con i seguenti orari: da lunedì a venerdì dalle 7:00 alle 13:00. [...] it/info/esami-di-laboratorio/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:28.818150
====================================================================================================
📋 Session ID: classify_1756634248
⏱️  Processing Time: 3.111s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (567 chars):
   [UTENTE] Il punto prelievi di viale sardegna è aperto in estate?  [ASSISTENTE] Il punto prelievi di Via Sardegna 5, Fizzonasco di Pieve Emanuele, è aperto durante l'estate con i seguenti orari: da ...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (342 chars):
   {'predicted_label': 'info\\_orari', 'confidence': 1.0, 'motivation': "La domanda dell'utente riguarda gli orari di apertura del punto prelievi di Via Sardegna 5, Fizzonasco di Pieve Emanuele. L'assistente ha fornito la risposta che il punto prelievi è aperto durante l'estate con i seguenti orari:...

📊 Parsed Response:
   predicted_label: info\_orari
   confidence: 1.0
   motivation: La domanda dell'utente riguarda gli orari di apertura del punto prelievi di Via Sardegna 5, Fizzonasco di Pieve Emanuele. L'assistente ha fornito la risposta che il punto prelievi è aperto durante l'estate con i seguenti orari: da lunedì a venerdì dalle 7:00 alle 13:00.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La domanda dell'utente riguarda gli orari di apertura del punto prelievi di Via Sardegna 5, Fizzonasco di Pieve Emanuele. L'assistente ha fornito la risposta che il punto prelievi è aperto durante l'estate con i seguenti orari: da lunedì a venerdì dalle 7:00 alle 13:00.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 0699ae8f580941c9da884f50ea13bbd6 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'info\_orari' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 474
   📊 Token totali: 922
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 922 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 474
   📊 Token conversazione finale: 474
   📊 Token totali: 922
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 1553 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato


TESTO DA CLASSIFICARE:
"[UTENTE] Vorrei sapere se sabato 30 settembre 2025 è possibile fare gli esami del sangue Humanitas fiordaliso? [ASSISTENTE] Presso Humanitas Medical Care Rozzano-Fiordaliso, il sabato è possibile effettuare prelievi del sangue dalle 7:30 alle 10:00 solo su prenotazione, e dalle 10:00 alle 11:00 c..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2878 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 474
   📊 Token totali stimati: 922
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato


TESTO DA CLASSIFICARE:
"[UTENTE] Vorrei sapere se sabato 30 settembre 2025 è possibile fare gli esami del sangue Humanitas fiordaliso? [ASSISTENTE] Presso Humanitas Medical Care Rozzano-Fiordaliso, il sabato è possibile effettuare prelievi del sangue dalle 7:30 alle 10:00 solo su prenotazione, e dalle 10:00 alle 11:00 c..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:31.613506
====================================================================================================
📋 Session ID: classify_1756634251
⏱️  Processing Time: 2.709s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (1553 chars):
   [UTENTE] Vorrei sapere se sabato 30 settembre 2025 è possibile fare gli esami del sangue Humanitas fiordaliso? [ASSISTENTE] Presso Humanitas Medical Care Rozzano-Fiordaliso, il sabato è possibile e...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (282 chars):
   {'predicted_label': 'prenotazione_esami', 'confidence': 1.0, 'motivation': "La conversazione riguarda l'accesso agli esami del sangue presso Humanitas Medical Care Rozzano-Fiordaliso e il fatto che è possibile effettuare la prenotazione o accedere liberamente a determinati orari."}

📊 Parsed Response:
   predicted_label: prenotazione_esami
   confidence: 1.0
   motivation: La conversazione riguarda l'accesso agli esami del sangue presso Humanitas Medical Care Rozzano-Fiordaliso e il fatto che è possibile effettuare la prenotazione o accedere liberamente a determinati orari.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda l'accesso agli esami del sangue presso Humanitas Medical Care Rozzano-Fiordaliso e il fatto che è possibile effettuare la prenotazione o accedere liberamente a determinati orari.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 8ec926debd5d2134b704ed9f33debc15 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ✅ Nuovo tag 'prenotazione_esami' aggiunto per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 191
   📊 Token totali: 640
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 640 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 191
   📊 Token conversazione finale: 191
   📊 Token totali: 640
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 648 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online


TESTO DA CLASSIFICARE:
"[UTENTE] Posso presentarmi senza appuntamento per gli esami del sangue con esenzione c03? [ASSISTENTE] Per effettuare esami del sangue con esenzione C03 presso Humanitas, è necessario prenotare. [...] it/info/esami-di-laboratorio/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2778 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 191
   📊 Token totali stimati: 640
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come posso contattare l'assistenza Wopta?"
Output: info_contatti
Ragionamento: Domanda sui contatti dell'assicurazione
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Su che sito posso aprire la polizza?"
Output: info_sottoscrizione_online
Ragionamento: Informazioni su come sottoscrivere la polizza online


TESTO DA CLASSIFICARE:
"[UTENTE] Posso presentarmi senza appuntamento per gli esami del sangue con esenzione c03? [ASSISTENTE] Per effettuare esami del sangue con esenzione C03 presso Humanitas, è necessario prenotare. [...] it/info/esami-di-laboratorio/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:33.997590
====================================================================================================
📋 Session ID: classify_1756634253
⏱️  Processing Time: 2.290s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (648 chars):
   [UTENTE] Posso presentarmi senza appuntamento per gli esami del sangue con esenzione c03? [ASSISTENTE] Per effettuare esami del sangue con esenzione C03 presso Humanitas, è necessario prenotare. L'...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (182 chars):
   {'predicted_label': 'prenotazione_esami', 'confidence': 1.0, 'motivation': "La conversazione riguarda l'esame di laboratorio e il fatto che è necessario prenotarsi per effettuarlo."}

📊 Parsed Response:
   predicted_label: prenotazione_esami
   confidence: 1.0
   motivation: La conversazione riguarda l'esame di laboratorio e il fatto che è necessario prenotarsi per effettuarlo.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda l'esame di laboratorio e il fatto che è necessario prenotarsi per effettuarlo.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione e75abcfbadd32ec3c8c556c8ce6dce48 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione_esami' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 268
   📊 Token totali: 717
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 717 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 268
   📊 Token conversazione finale: 268
   📊 Token totali: 717
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 778 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte


TESTO DA CLASSIFICARE:
"[UTENTE] devo prenotare in humanitas con ssn. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2646 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 268
   📊 Token totali stimati: 717
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Come faccio a raggiungervi? Parto da Milano"
Output: indicazioni_stradali
Ragionamento: Informazioni su come raggiungere la sede Wopta
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "In caso di morte, come funziona l'indennizzo?"
Output: info_caso_morte
Ragionamento: Richiesta informazioni su come funziona la copertura in caso di morte


TESTO DA CLASSIFICARE:
"[UTENTE] devo prenotare in humanitas con ssn. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:36.922033
====================================================================================================
📋 Session ID: classify_1756634256
⏱️  Processing Time: 2.839s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (778 chars):
   [UTENTE] devo prenotare in humanitas con ssn. come faccio ? [ASSISTENTE] Per prenotare una visita o un esame tramite il Servizio Sanitario Nazionale (SSN) presso Humanitas, puoi utilizzare i seguen...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (353 chars):
   {'predicted_label': 'prenotazione', 'confidence': 1.0, 'motivation': 'La conversazione riguarda la richiesta di prenotazione presso Humanitas tramite il Servizio Sanitario Nazionale (SSN). Il messaggio dell\'utente è "devo prenotare in humanitas con ssn. come faccio ?" e l\'assistente fornisce in...

📊 Parsed Response:
   predicted_label: prenotazione
   confidence: 1.0
   motivation: La conversazione riguarda la richiesta di prenotazione presso Humanitas tramite il Servizio Sanitario Nazionale (SSN). Il messaggio dell'utente è "devo prenotare in humanitas con ssn. come faccio ?" e l'assistente fornisce informazioni su come prenotare online o telefonicamente.
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 1.000
   [████████████████████] 100.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la richiesta di prenotazione presso Humanitas tramite il Servizio Sanitario Nazionale (SSN). Il messaggio dell'utente è "devo prenotare in humanitas con ssn. come faccio ?" e l'assistente fornisce informazioni su come prenotare online o telefonicamente.
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione b38f5bd11129417f713b6637b0f9c420 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 448
   💬 Token conversazione: 311
   📊 Token totali: 759
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 759 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 448
   📊 Token conversazione originale: 311
   📊 Token conversazione finale: 311
   📊 Token totali: 759
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 945 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Mi dai l'indirizzo della sede di Wopta?"
Output: info_sede_aziendale
Ragionamento: Richiesta informazioni sulla sede aziendale
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Non ho ricevuto la documentazione della polizza"
Output: problema_amministrativo
Ragionamento: Problemi con documenti o questioni amministrative
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza


TESTO DA CLASSIFICARE:
"[UTENTE] Buonasera, avrei bisogno di sapere per mia mamma se possibile fare una RM addome sup senza e con MDC per gennaio, in convenzione ssn grazie  [ASSISTENTE] Per prenotare una Risonanza Magnetica (RM) dell'addome superiore senza e con mezzo di contrasto (MDC) in convenzione con il Servizio S..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2866 characters
🔢 Token Analysis:
   📊 Token prompt base: 448
   📊 Token conversazione: 311
   📊 Token totali stimati: 759
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
<|system|>
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta informativa - preferisci etichette info_*

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.

<|user|>
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Devo fare visite mediche per attivare la polizza?"
Output: info_questionario_medico
Ragionamento: Domande su questionari o visite mediche richieste
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Mi dai l'indirizzo della sede di Wopta?"
Output: info_sede_aziendale
Ragionamento: Richiesta informazioni sulla sede aziendale
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Non ho ricevuto la documentazione della polizza"
Output: problema_amministrativo
Ragionamento: Problemi con documenti o questioni amministrative
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Come funziona il riscatto della polizza?"
Output: info_riscatto_polizza
Ragionamento: Richiesta informazioni sul riscatto della polizza


TESTO DA CLASSIFICARE:
"[UTENTE] Buonasera, avrei bisogno di sapere per mia mamma se possibile fare una RM addome sup senza e con MDC per gennaio, in convenzione ssn grazie  [ASSISTENTE] Per prenotare una Risonanza Magnetica (RM) dell'addome superiore senza e con mezzo di contrasto (MDC) in convenzione con il Servizio S..."

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):

<|assistant|>
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥


====================================================================================================
🤖 LLM DEBUG - CLASSIFICATION | 2025-08-31T09:57:39.562423
====================================================================================================
📋 Session ID: classify_1756634259
⏱️  Processing Time: 2.554s
----------------------------------------------------------------------------------------------------
📥 INPUT SECTION
--------------------------------------------------
💬 Original Text (945 chars):
   [UTENTE] Buonasera, avrei bisogno di sapere per mia mamma se possibile fare una RM addome sup senza e con MDC per gennaio, in convenzione ssn grazie  [ASSISTENTE] Per prenotare una Risonanza Magnet...

🎯 Prompt Template:
   
     Line 1: <|system|>
     Line 2: Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario
     Line 3: 
     ... [74 more lines] ...
     Line 78: <|assistant|>

⚙️  Model Parameters:
   model: mistral:7b
   temperature: 0.1
   max_tokens: 150
   timeout: 300
----------------------------------------------------------------------------------------------------
📤 OUTPUT SECTION
--------------------------------------------------
🔍 Raw Response (251 chars):
   {'predicted_label': 'prenotazione_rm_addome', 'confidence': 0.98, 'motivation': 'La conversazione riguarda la richiesta di prenotare una Risonanza Magnetica (RM) dell\'addome superiore, quindi la categoria più appropriata è "prenotazione_rm_addome".'}

📊 Parsed Response:
   predicted_label: prenotazione_rm_addome
   confidence: 0.98
   motivation: La conversazione riguarda la richiesta di prenotare una Risonanza Magnetica (RM) dell'addome superiore, quindi la categoria più appropriata è "prenotazione_rm_addome".
----------------------------------------------------------------------------------------------------
📈 ANALYSIS SECTION
--------------------------------------------------
🎯 Confidence Score: 0.980
   [███████████████████░] 98.0%

🧠 Reasoning/Motivation:
   La conversazione riguarda la richiesta di prenotare una Risonanza Magnetica (RM) dell'addome superiore, quindi la categoria più appropriata è "prenotazione_rm_addome".
----------------------------------------------------------------------------------------------------
🔍 CONTEXT & METADATA
--------------------------------------------------
   model_used: mistral:7b
   cache_hit: False
   context_provided: False
   embedding_validation_enabled: True
   client_name: humanitas
   raw_mode_used: True
----------------------------------------------------------------------------------------------------
✅ LLM DEBUG COMPLETED
====================================================================================================

📊 Collection generata: humanitas_015007d9-d413-11ef-86a5-96000228e7fe per tenant Humanitas
🤖 LLM DIRECT CLASSIFICATION: Sessione 7301c119d7bc1199c40050eead56cbf7 classificata tramite LLM diretto (classificazione=unknown)
Connessione al database TAG stabilita con successo
  ℹ️ Tag 'prenotazione_rm_addome' già esistente per tenant 015007d9-d413-11ef-86a5-96000228e7fe
Connessione al database TAG chiusa
Connessione al database TAG stabilita con successo
Connessione al database TAG chiusa

================================================================================
🤖 DEBUG PROMPT SYSTEM - DATABASE
================================================================================
📋 Prompt Name: LLM/SYSTEM/intelligent_classifier_system
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📝 Variables Used: ['available_labels', 'priority_labels', 'context_guidance']
--------------------------------------------------------------------------------
📄 SYSTEM PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Sei un classificatore esperto per l'ospedale Humanitas con profonda conoscenza del dominio sanitario.

MISSIONE: Classifica conversazioni con pazienti/utenti in base al loro intento principale.

APPROCCIO ANALITICO:
1. Identifica l'intento principale (non dettagli secondari)
2. Considera il contesto ospedaliero (prenotazioni, referti, informazioni)
3. Distingui richieste operative da richieste informative
4. Se incerto tra 2 etichette, scegli la più specifica

CONFIDENCE GUIDELINES:
- 0.9-1.0: Intento chiarissimo e inequivocabile
- 0.7-0.8: Intento probabile con piccole ambiguità
- 0.5-0.6: Intento possibile ma con dubbi ragionevoli  
- 0.3-0.4: Molto incerto, probabilmente "altro"
- 0.0-0.2: Impossibile classificare

LABELING GUIDELINES:
la logica con cui devi creare le etichette è: <tipologia di richiesta>_<ambito a cui si riferisce> 

#LABELING EXAMPLE 
- info_prenotazione
- info_esame
- info_ricovero
- info_prericovero
- parere_clinico
- info_fertility_center 
- problema_accesso_portale
- problema_registrazione_portale
- info_ritiro_referto_cartella_clinica



CONTESTO SPECIFICO: Richiesta operativa - preferisci etichette di azione

OUTPUT FORMAT (SOLO JSON):
{"predicted_label": "etichetta_precisa", "confidence": 0.X, "motivation": "ragionamento_breve"}

CRITICAL: Genera ESCLUSIVAMENTE JSON valido. Zero testo aggiuntivo.
================================================================================

🔍 TOKENIZZAZIONE PREVENTIVA LLM CLASSIFICATION
============================================================
🤖 ELABORAZIONE CONVERSAZIONE PER LLM
   🆔 Session ID: llm_conversation
   📝 Token prompt: 449
   💬 Token conversazione: 124
   📊 Token totali: 573
   🎯 Limite massimo: 8000
   ✅ Conversazione OK: 573 ≤ 8000
✅ Tokenizzazione LLM completata:
   📊 Token prompt base: 449
   📊 Token conversazione originale: 124
   📊 Token conversazione finale: 124
   📊 Token totali: 573
   📊 Limite configurato: 8000
   ✅ Conversazione entro i limiti, nessun troncamento
============================================================

================================================================================
👤 DEBUG PROMPT USER - DATABASE
================================================================================
📋 Prompt Name: LLM/TEMPLATE/intelligent_classifier_user
🏢 Tenant ID: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Text Length: 434 chars
--------------------------------------------------------------------------------
📄 USER PROMPT CONTENT (dopo sostituzione placeholder):
--------------------------------------------------------------------------------
Analizza questo testo seguendo l'approccio degli esempi:

ESEMPIO 1 (ALTA CERTEZZA):
Input: "Come faccio a disdire la polizza vita?"
Output: disdetta_polizza
Ragionamento: L'utente vuole disdire la sua polizza vita
ESEMPIO 2 (ALTA CERTEZZA):
Input: "Quanti anni può durare al massimo la polizza vita?"
Output: info_durata_polizza
Ragionamento: Richiesta di informazioni sulla durata della polizza vita
ESEMPIO 3 (MEDIA CERTEZZA):
Input: "Il beneficiario della polizza deve essere mio figlio che deve ancora nascere, come posso fare?"
Output: info_beneficiario
Ragionamento: Domanda su come impostare un beneficiario non ancora nato
ESEMPIO 4 (MEDIA CERTEZZA):
Input: "Devo cambiare la mail con cui mi sono registrato al portale"
Output: cambio_anagrafica
Ragionamento: Cambio delle informazioni anagrafiche richiesto
ESEMPIO 5 (MEDIA CERTEZZA):
Input: "Quando inserisco il CF dice che non è valido"
Output: problema_accesso_portale
Ragionamento: Problema tecnico di accesso al portale online


TESTO DA CLASSIFICARE:
"[UTENTE] è possibile eseguire una visita dermatologica in ssn a Castellanza? [ASSISTENTE] Sì, è possibile eseguire una visita dermatologica tramite il Servizio Sanitario Nazionale (SSN) presso Humanitas Mater Domini a Castellanza. [...] it/info/prenotazioni/)"

RAGIONA STEP-BY-STEP:
1. Identifica l'intento principale
2. Confronta con gli esempi
3. Scegli l'etichetta più appropriata
4. Valuta la tua certezza

OUTPUT (SOLO JSON):
================================================================================

🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🚀 PROMPT COMPLETO FINALE INVIATO ALL'LLM
🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥🔥
🤖 Model: mistral:7b
🌐 Ollama URL: http://localhost:11434
🏢 Tenant: 015007d9-d413-11ef-86a5-96000228e7fe
📏 Total Prompt Length: 2832 characters
🔢 Token Analysis:
   📊 Token prompt base: 449
   📊 Token conversazione: 124
   📊 Token totali stimati: 573
   📊 Limite configurato: 8000
   ✅ STATUS: Conversazione COMPLETA
--------------------------------------------------------------------------------
📄 FULL PROMPT CONTENT:
--------------------------------------------------------------------------------
