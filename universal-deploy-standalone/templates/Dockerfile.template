# {{PROJECT_TYPE}} project Dockerfile
FROM {{BASE_IMAGE}}

WORKDIR /app

# Install curl for health checks
RUN if command -v apk >/dev/null; then \
        apk add --no-cache curl; \
    elif command -v apt-get >/dev/null; then \
        apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*; \
    fi

# Copy package files first for better caching
{{COPY_PACKAGE_FILES}}

# Install dependencies
{{INSTALL_COMMAND}}

# Copy application code
COPY . .

# Create non-root user (Alpine vs Debian/Ubuntu)
RUN if command -v addgroup >/dev/null 2>&1; then \
        addgroup -g 1001 -S appgroup && \
        adduser -S appuser -u 1001 -G appgroup; \
    else \
        groupadd -r appgroup && \
        useradd -r -g appgroup appuser; \
    fi

# Change ownership of the app directory
RUN chown -R appuser:appgroup /app
USER appuser

# Expose port
EXPOSE {{MAIN_PORT}}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD if command -v curl >/dev/null 2>&1; then \
            curl -f http://localhost:{{MAIN_PORT}}{{HEALTH_ENDPOINT}}; \
        elif command -v wget >/dev/null 2>&1; then \
            wget --no-verbose --tries=1 --spider http://localhost:{{MAIN_PORT}}{{HEALTH_ENDPOINT}}; \
        else \
            exit 1; \
        fi

# Start command
CMD {{START_COMMAND}}
